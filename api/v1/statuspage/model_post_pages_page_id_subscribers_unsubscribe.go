/*
Statuspage API

# Code of Conduct Please don't abuse the API, and please report all feature requests and issues to https://support.atlassian.com/contact  # Rate Limiting Each API token is limited to 1 request / second as measured on a 60 second rolling window. To get this limit increased, please contact us at https://support.atlassian.com/contact  Error codes 420 or 429 indicate that you have exceeded the rate limit and the request has been rejected.  # Basics  ## HTTPS It's required  ## URL Prefix In order to maintain version integrity into the future, the API is versioned. All calls currently begin with the following prefix:    https://api.statuspage.io/v1/  ## RESTful Interface Wherever possible, the API seeks to implement repeatable patterns with logical, representative URLs and descriptive HTTP verbs. Below are some examples and conventions you will see throughout the documentation.  * Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json * Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json * GET will retrieve information about a collection/element * POST will create an element in a collection * PATCH will update a single element * PUT will replace a single element in a collection (rarely used) * DELETE will destroy a single element  ## Sending Data Information can be sent in the body as form urlencoded or JSON, but make sure the Content-Type header matches the body structure or the server gremlins will be angry.  All examples are provided in JSON format, however they can easily be converted to form encoding if required.  Some examples of how to convert things are below:      // JSON     {       \"incident\": {         \"name\": \"test incident\",         \"components\": [\"8kbf7d35c070\", \"vtnh60py4yd7\"]       }     }      // Form Encoded (using curl as an example):     curl -X POST https://api.statuspage.io/v1/example \\       -d \"incident[name]=test incident\" \\       -d \"incident[components][]=8kbf7d35c070\" \\       -d \"incident[components][]=vtnh60py4yd7\"  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostPagesPageIdSubscribersUnsubscribe Unsubscribe a list of subscribers
type PostPagesPageIdSubscribersUnsubscribe struct {
	// The array of subscriber codes to unsubscribe (limited to 100), or \"all\" to unsubscribe all subscribers if the number of subscribers is less than 100.
	Subscribers string `json:"subscribers"`
	// If this is present, only unsubscribe subscribers of this type.
	Type *string `json:"type,omitempty"`
	// If this is present, only unsubscribe subscribers in this state. Specify state \"all\" to unsubscribe subscribers in any states.
	State *string `json:"state,omitempty"`
	// If skip_unsubscription_notification is true, the subscribers do not receive any notifications when they are unsubscribed.
	SkipUnsubscriptionNotification *bool `json:"skip_unsubscription_notification,omitempty"`
}

// NewPostPagesPageIdSubscribersUnsubscribe instantiates a new PostPagesPageIdSubscribersUnsubscribe object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostPagesPageIdSubscribersUnsubscribe(subscribers string) *PostPagesPageIdSubscribersUnsubscribe {
	this := PostPagesPageIdSubscribersUnsubscribe{}
	this.Subscribers = subscribers
	var state string = "active"
	this.State = &state
	return &this
}

// NewPostPagesPageIdSubscribersUnsubscribeWithDefaults instantiates a new PostPagesPageIdSubscribersUnsubscribe object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostPagesPageIdSubscribersUnsubscribeWithDefaults() *PostPagesPageIdSubscribersUnsubscribe {
	this := PostPagesPageIdSubscribersUnsubscribe{}
	var state string = "active"
	this.State = &state
	return &this
}

// GetSubscribers returns the Subscribers field value
func (o *PostPagesPageIdSubscribersUnsubscribe) GetSubscribers() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subscribers
}

// GetSubscribersOk returns a tuple with the Subscribers field value
// and a boolean to check if the value has been set.
func (o *PostPagesPageIdSubscribersUnsubscribe) GetSubscribersOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Subscribers, true
}

// SetSubscribers sets field value
func (o *PostPagesPageIdSubscribersUnsubscribe) SetSubscribers(v string) {
	o.Subscribers = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PostPagesPageIdSubscribersUnsubscribe) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPagesPageIdSubscribersUnsubscribe) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PostPagesPageIdSubscribersUnsubscribe) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PostPagesPageIdSubscribersUnsubscribe) SetType(v string) {
	o.Type = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *PostPagesPageIdSubscribersUnsubscribe) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPagesPageIdSubscribersUnsubscribe) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *PostPagesPageIdSubscribersUnsubscribe) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *PostPagesPageIdSubscribersUnsubscribe) SetState(v string) {
	o.State = &v
}

// GetSkipUnsubscriptionNotification returns the SkipUnsubscriptionNotification field value if set, zero value otherwise.
func (o *PostPagesPageIdSubscribersUnsubscribe) GetSkipUnsubscriptionNotification() bool {
	if o == nil || o.SkipUnsubscriptionNotification == nil {
		var ret bool
		return ret
	}
	return *o.SkipUnsubscriptionNotification
}

// GetSkipUnsubscriptionNotificationOk returns a tuple with the SkipUnsubscriptionNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPagesPageIdSubscribersUnsubscribe) GetSkipUnsubscriptionNotificationOk() (*bool, bool) {
	if o == nil || o.SkipUnsubscriptionNotification == nil {
		return nil, false
	}
	return o.SkipUnsubscriptionNotification, true
}

// HasSkipUnsubscriptionNotification returns a boolean if a field has been set.
func (o *PostPagesPageIdSubscribersUnsubscribe) HasSkipUnsubscriptionNotification() bool {
	if o != nil && o.SkipUnsubscriptionNotification != nil {
		return true
	}

	return false
}

// SetSkipUnsubscriptionNotification gets a reference to the given bool and assigns it to the SkipUnsubscriptionNotification field.
func (o *PostPagesPageIdSubscribersUnsubscribe) SetSkipUnsubscriptionNotification(v bool) {
	o.SkipUnsubscriptionNotification = &v
}

func (o PostPagesPageIdSubscribersUnsubscribe) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subscribers"] = o.Subscribers
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.SkipUnsubscriptionNotification != nil {
		toSerialize["skip_unsubscription_notification"] = o.SkipUnsubscriptionNotification
	}
	return json.Marshal(toSerialize)
}

type NullablePostPagesPageIdSubscribersUnsubscribe struct {
	value *PostPagesPageIdSubscribersUnsubscribe
	isSet bool
}

func (v NullablePostPagesPageIdSubscribersUnsubscribe) Get() *PostPagesPageIdSubscribersUnsubscribe {
	return v.value
}

func (v *NullablePostPagesPageIdSubscribersUnsubscribe) Set(val *PostPagesPageIdSubscribersUnsubscribe) {
	v.value = val
	v.isSet = true
}

func (v NullablePostPagesPageIdSubscribersUnsubscribe) IsSet() bool {
	return v.isSet
}

func (v *NullablePostPagesPageIdSubscribersUnsubscribe) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostPagesPageIdSubscribersUnsubscribe(val *PostPagesPageIdSubscribersUnsubscribe) *NullablePostPagesPageIdSubscribersUnsubscribe {
	return &NullablePostPagesPageIdSubscribersUnsubscribe{value: val, isSet: true}
}

func (v NullablePostPagesPageIdSubscribersUnsubscribe) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostPagesPageIdSubscribersUnsubscribe) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


