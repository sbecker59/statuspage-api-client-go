/*
Statuspage API

# Code of Conduct Please don't abuse the API, and please report all feature requests and issues to https://support.atlassian.com/contact  # Rate Limiting Each API token is limited to 1 request / second as measured on a 60 second rolling window. To get this limit increased, please contact us at https://support.atlassian.com/contact  Error codes 420 or 429 indicate that you have exceeded the rate limit and the request has been rejected.  # Basics  ## HTTPS It's required  ## URL Prefix In order to maintain version integrity into the future, the API is versioned. All calls currently begin with the following prefix:    https://api.statuspage.io/v1/  ## RESTful Interface Wherever possible, the API seeks to implement repeatable patterns with logical, representative URLs and descriptive HTTP verbs. Below are some examples and conventions you will see throughout the documentation.  * Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json * Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json * GET will retrieve information about a collection/element * POST will create an element in a collection * PATCH will update a single element * PUT will replace a single element in a collection (rarely used) * DELETE will destroy a single element  ## Sending Data Information can be sent in the body as form urlencoded or JSON, but make sure the Content-Type header matches the body structure or the server gremlins will be angry.  All examples are provided in JSON format, however they can easily be converted to form encoding if required.  Some examples of how to convert things are below:      // JSON     {       \"incident\": {         \"name\": \"test incident\",         \"components\": [\"8kbf7d35c070\", \"vtnh60py4yd7\"]       }     }      // Form Encoded (using curl as an example):     curl -X POST https://api.statuspage.io/v1/example \\       -d \"incident[name]=test incident\" \\       -d \"incident[components][]=8kbf7d35c070\" \\       -d \"incident[components][]=vtnh60py4yd7\"  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StatusEmbedConfig Update status embed config settings
type StatusEmbedConfig struct {
	// Page identifier
	PageId *string `json:"page_id,omitempty"`
	// Corner where status embed iframe will appear on page
	Position *string `json:"position,omitempty"`
	// Color of status embed iframe background when displaying incident
	IncidentBackgroundColor *string `json:"incident_background_color,omitempty"`
	// Color of status embed iframe text when displaying incident
	IncidentTextColor *string `json:"incident_text_color,omitempty"`
	// Color of status embed iframe background when displaying maintenance
	MaintenanceBackgroundColor *string `json:"maintenance_background_color,omitempty"`
	// Color of status embed iframe text when displaying maintenance
	MaintenanceTextColor *string `json:"maintenance_text_color,omitempty"`
}

// NewStatusEmbedConfig instantiates a new StatusEmbedConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusEmbedConfig() *StatusEmbedConfig {
	this := StatusEmbedConfig{}
	return &this
}

// NewStatusEmbedConfigWithDefaults instantiates a new StatusEmbedConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusEmbedConfigWithDefaults() *StatusEmbedConfig {
	this := StatusEmbedConfig{}
	return &this
}

// GetPageId returns the PageId field value if set, zero value otherwise.
func (o *StatusEmbedConfig) GetPageId() string {
	if o == nil || o.PageId == nil {
		var ret string
		return ret
	}
	return *o.PageId
}

// GetPageIdOk returns a tuple with the PageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusEmbedConfig) GetPageIdOk() (*string, bool) {
	if o == nil || o.PageId == nil {
		return nil, false
	}
	return o.PageId, true
}

// HasPageId returns a boolean if a field has been set.
func (o *StatusEmbedConfig) HasPageId() bool {
	if o != nil && o.PageId != nil {
		return true
	}

	return false
}

// SetPageId gets a reference to the given string and assigns it to the PageId field.
func (o *StatusEmbedConfig) SetPageId(v string) {
	o.PageId = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *StatusEmbedConfig) GetPosition() string {
	if o == nil || o.Position == nil {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusEmbedConfig) GetPositionOk() (*string, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *StatusEmbedConfig) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *StatusEmbedConfig) SetPosition(v string) {
	o.Position = &v
}

// GetIncidentBackgroundColor returns the IncidentBackgroundColor field value if set, zero value otherwise.
func (o *StatusEmbedConfig) GetIncidentBackgroundColor() string {
	if o == nil || o.IncidentBackgroundColor == nil {
		var ret string
		return ret
	}
	return *o.IncidentBackgroundColor
}

// GetIncidentBackgroundColorOk returns a tuple with the IncidentBackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusEmbedConfig) GetIncidentBackgroundColorOk() (*string, bool) {
	if o == nil || o.IncidentBackgroundColor == nil {
		return nil, false
	}
	return o.IncidentBackgroundColor, true
}

// HasIncidentBackgroundColor returns a boolean if a field has been set.
func (o *StatusEmbedConfig) HasIncidentBackgroundColor() bool {
	if o != nil && o.IncidentBackgroundColor != nil {
		return true
	}

	return false
}

// SetIncidentBackgroundColor gets a reference to the given string and assigns it to the IncidentBackgroundColor field.
func (o *StatusEmbedConfig) SetIncidentBackgroundColor(v string) {
	o.IncidentBackgroundColor = &v
}

// GetIncidentTextColor returns the IncidentTextColor field value if set, zero value otherwise.
func (o *StatusEmbedConfig) GetIncidentTextColor() string {
	if o == nil || o.IncidentTextColor == nil {
		var ret string
		return ret
	}
	return *o.IncidentTextColor
}

// GetIncidentTextColorOk returns a tuple with the IncidentTextColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusEmbedConfig) GetIncidentTextColorOk() (*string, bool) {
	if o == nil || o.IncidentTextColor == nil {
		return nil, false
	}
	return o.IncidentTextColor, true
}

// HasIncidentTextColor returns a boolean if a field has been set.
func (o *StatusEmbedConfig) HasIncidentTextColor() bool {
	if o != nil && o.IncidentTextColor != nil {
		return true
	}

	return false
}

// SetIncidentTextColor gets a reference to the given string and assigns it to the IncidentTextColor field.
func (o *StatusEmbedConfig) SetIncidentTextColor(v string) {
	o.IncidentTextColor = &v
}

// GetMaintenanceBackgroundColor returns the MaintenanceBackgroundColor field value if set, zero value otherwise.
func (o *StatusEmbedConfig) GetMaintenanceBackgroundColor() string {
	if o == nil || o.MaintenanceBackgroundColor == nil {
		var ret string
		return ret
	}
	return *o.MaintenanceBackgroundColor
}

// GetMaintenanceBackgroundColorOk returns a tuple with the MaintenanceBackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusEmbedConfig) GetMaintenanceBackgroundColorOk() (*string, bool) {
	if o == nil || o.MaintenanceBackgroundColor == nil {
		return nil, false
	}
	return o.MaintenanceBackgroundColor, true
}

// HasMaintenanceBackgroundColor returns a boolean if a field has been set.
func (o *StatusEmbedConfig) HasMaintenanceBackgroundColor() bool {
	if o != nil && o.MaintenanceBackgroundColor != nil {
		return true
	}

	return false
}

// SetMaintenanceBackgroundColor gets a reference to the given string and assigns it to the MaintenanceBackgroundColor field.
func (o *StatusEmbedConfig) SetMaintenanceBackgroundColor(v string) {
	o.MaintenanceBackgroundColor = &v
}

// GetMaintenanceTextColor returns the MaintenanceTextColor field value if set, zero value otherwise.
func (o *StatusEmbedConfig) GetMaintenanceTextColor() string {
	if o == nil || o.MaintenanceTextColor == nil {
		var ret string
		return ret
	}
	return *o.MaintenanceTextColor
}

// GetMaintenanceTextColorOk returns a tuple with the MaintenanceTextColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusEmbedConfig) GetMaintenanceTextColorOk() (*string, bool) {
	if o == nil || o.MaintenanceTextColor == nil {
		return nil, false
	}
	return o.MaintenanceTextColor, true
}

// HasMaintenanceTextColor returns a boolean if a field has been set.
func (o *StatusEmbedConfig) HasMaintenanceTextColor() bool {
	if o != nil && o.MaintenanceTextColor != nil {
		return true
	}

	return false
}

// SetMaintenanceTextColor gets a reference to the given string and assigns it to the MaintenanceTextColor field.
func (o *StatusEmbedConfig) SetMaintenanceTextColor(v string) {
	o.MaintenanceTextColor = &v
}

func (o StatusEmbedConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PageId != nil {
		toSerialize["page_id"] = o.PageId
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.IncidentBackgroundColor != nil {
		toSerialize["incident_background_color"] = o.IncidentBackgroundColor
	}
	if o.IncidentTextColor != nil {
		toSerialize["incident_text_color"] = o.IncidentTextColor
	}
	if o.MaintenanceBackgroundColor != nil {
		toSerialize["maintenance_background_color"] = o.MaintenanceBackgroundColor
	}
	if o.MaintenanceTextColor != nil {
		toSerialize["maintenance_text_color"] = o.MaintenanceTextColor
	}
	return json.Marshal(toSerialize)
}

type NullableStatusEmbedConfig struct {
	value *StatusEmbedConfig
	isSet bool
}

func (v NullableStatusEmbedConfig) Get() *StatusEmbedConfig {
	return v.value
}

func (v *NullableStatusEmbedConfig) Set(val *StatusEmbedConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusEmbedConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusEmbedConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusEmbedConfig(val *StatusEmbedConfig) *NullableStatusEmbedConfig {
	return &NullableStatusEmbedConfig{value: val, isSet: true}
}

func (v NullableStatusEmbedConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusEmbedConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


