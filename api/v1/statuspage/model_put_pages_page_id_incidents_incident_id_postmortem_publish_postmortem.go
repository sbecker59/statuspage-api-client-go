/*
Statuspage API

# Code of Conduct Please don't abuse the API, and please report all feature requests and issues to https://support.atlassian.com/contact  # Rate Limiting Each API token is limited to 1 request / second as measured on a 60 second rolling window. To get this limit increased, please contact us at https://support.atlassian.com/contact  Error codes 420 or 429 indicate that you have exceeded the rate limit and the request has been rejected.  # Basics  ## HTTPS It's required  ## URL Prefix In order to maintain version integrity into the future, the API is versioned. All calls currently begin with the following prefix:    https://api.statuspage.io/v1/  ## RESTful Interface Wherever possible, the API seeks to implement repeatable patterns with logical, representative URLs and descriptive HTTP verbs. Below are some examples and conventions you will see throughout the documentation.  * Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json * Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json * GET will retrieve information about a collection/element * POST will create an element in a collection * PATCH will update a single element * PUT will replace a single element in a collection (rarely used) * DELETE will destroy a single element  ## Sending Data Information can be sent in the body as form urlencoded or JSON, but make sure the Content-Type header matches the body structure or the server gremlins will be angry.  All examples are provided in JSON format, however they can easily be converted to form encoding if required.  Some examples of how to convert things are below:      // JSON     {       \"incident\": {         \"name\": \"test incident\",         \"components\": [\"8kbf7d35c070\", \"vtnh60py4yd7\"]       }     }      // Form Encoded (using curl as an example):     curl -X POST https://api.statuspage.io/v1/example \\       -d \"incident[name]=test incident\" \\       -d \"incident[components][]=8kbf7d35c070\" \\       -d \"incident[components][]=vtnh60py4yd7\"  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem struct for PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem
type PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem struct {
	// Whether to notify Twitter followers
	NotifyTwitter *bool `json:"notify_twitter,omitempty"`
	// Whether to notify e-mail subscribers
	NotifySubscribers *bool `json:"notify_subscribers,omitempty"`
	// Custom postmortem tweet to publish
	CustomTweet *string `json:"custom_tweet,omitempty"`
}

// NewPutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem instantiates a new PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem() *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem {
	this := PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem{}
	return &this
}

// NewPutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortemWithDefaults instantiates a new PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortemWithDefaults() *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem {
	this := PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem{}
	return &this
}

// GetNotifyTwitter returns the NotifyTwitter field value if set, zero value otherwise.
func (o *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) GetNotifyTwitter() bool {
	if o == nil || o.NotifyTwitter == nil {
		var ret bool
		return ret
	}
	return *o.NotifyTwitter
}

// GetNotifyTwitterOk returns a tuple with the NotifyTwitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) GetNotifyTwitterOk() (*bool, bool) {
	if o == nil || o.NotifyTwitter == nil {
		return nil, false
	}
	return o.NotifyTwitter, true
}

// HasNotifyTwitter returns a boolean if a field has been set.
func (o *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) HasNotifyTwitter() bool {
	if o != nil && o.NotifyTwitter != nil {
		return true
	}

	return false
}

// SetNotifyTwitter gets a reference to the given bool and assigns it to the NotifyTwitter field.
func (o *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) SetNotifyTwitter(v bool) {
	o.NotifyTwitter = &v
}

// GetNotifySubscribers returns the NotifySubscribers field value if set, zero value otherwise.
func (o *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) GetNotifySubscribers() bool {
	if o == nil || o.NotifySubscribers == nil {
		var ret bool
		return ret
	}
	return *o.NotifySubscribers
}

// GetNotifySubscribersOk returns a tuple with the NotifySubscribers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) GetNotifySubscribersOk() (*bool, bool) {
	if o == nil || o.NotifySubscribers == nil {
		return nil, false
	}
	return o.NotifySubscribers, true
}

// HasNotifySubscribers returns a boolean if a field has been set.
func (o *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) HasNotifySubscribers() bool {
	if o != nil && o.NotifySubscribers != nil {
		return true
	}

	return false
}

// SetNotifySubscribers gets a reference to the given bool and assigns it to the NotifySubscribers field.
func (o *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) SetNotifySubscribers(v bool) {
	o.NotifySubscribers = &v
}

// GetCustomTweet returns the CustomTweet field value if set, zero value otherwise.
func (o *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) GetCustomTweet() string {
	if o == nil || o.CustomTweet == nil {
		var ret string
		return ret
	}
	return *o.CustomTweet
}

// GetCustomTweetOk returns a tuple with the CustomTweet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) GetCustomTweetOk() (*string, bool) {
	if o == nil || o.CustomTweet == nil {
		return nil, false
	}
	return o.CustomTweet, true
}

// HasCustomTweet returns a boolean if a field has been set.
func (o *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) HasCustomTweet() bool {
	if o != nil && o.CustomTweet != nil {
		return true
	}

	return false
}

// SetCustomTweet gets a reference to the given string and assigns it to the CustomTweet field.
func (o *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) SetCustomTweet(v string) {
	o.CustomTweet = &v
}

func (o PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NotifyTwitter != nil {
		toSerialize["notify_twitter"] = o.NotifyTwitter
	}
	if o.NotifySubscribers != nil {
		toSerialize["notify_subscribers"] = o.NotifySubscribers
	}
	if o.CustomTweet != nil {
		toSerialize["custom_tweet"] = o.CustomTweet
	}
	return json.Marshal(toSerialize)
}

type NullablePutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem struct {
	value *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem
	isSet bool
}

func (v NullablePutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) Get() *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem {
	return v.value
}

func (v *NullablePutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) Set(val *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) {
	v.value = val
	v.isSet = true
}

func (v NullablePutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) IsSet() bool {
	return v.isSet
}

func (v *NullablePutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem(val *PutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) *NullablePutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem {
	return &NullablePutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem{value: val, isSet: true}
}

func (v NullablePutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutPagesPageIdIncidentsIncidentIdPostmortemPublishPostmortem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


