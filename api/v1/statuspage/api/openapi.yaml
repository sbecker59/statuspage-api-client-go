openapi: 3.0.0
info:
  contact:
    name: Statuspage Support
    url: https://support.atlassian.com/contact
  description: |-
    # Code of Conduct
    Please don't abuse the API, and please report all feature requests and issues to
    https://support.atlassian.com/contact

    # Rate Limiting
    Each API token is limited to 1 request / second as measured on a 60 second rolling window.
    To get this limit increased, please contact us at https://support.atlassian.com/contact

    Error codes 420 or 429 indicate that you have exceeded the rate limit and the request has been rejected.

    # Basics

    ## HTTPS
    It's required

    ## URL Prefix
    In order to maintain version integrity into the future, the API is versioned. All calls
    currently begin with the following prefix:

      https://api.statuspage.io/v1/

    ## RESTful Interface
    Wherever possible, the API seeks to implement repeatable patterns with logical,
    representative URLs and descriptive HTTP verbs. Below are some examples and conventions
    you will see throughout the documentation.

    * Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json
    * Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json
    * GET will retrieve information about a collection/element
    * POST will create an element in a collection
    * PATCH will update a single element
    * PUT will replace a single element in a collection (rarely used)
    * DELETE will destroy a single element

    ## Sending Data
    Information can be sent in the body as form urlencoded or JSON, but make sure the
    Content-Type header matches the body structure or the server gremlins will be angry.

    All examples are provided in JSON format, however they can easily be converted to form encoding
    if required.  Some examples of how to convert things are below:

        // JSON
        {
          "incident": {
            "name": "test incident",
            "components": ["8kbf7d35c070", "vtnh60py4yd7"]
          }
        }

        // Form Encoded (using curl as an example):
        curl -X POST https://api.statuspage.io/v1/example \
          -d "incident[name]=test incident" \
          -d "incident[components][]=8kbf7d35c070" \
          -d "incident[components][]=vtnh60py4yd7"

    # Authentication

    <!-- ReDoc-Inject: <security-definitions> -->
  title: Statuspage API
  version: 1.0.0
  x-logo:
    url: https://d1ykxpo828xni0.cloudfront.net/Statuspage-logo-padding.svg
servers:
- url: https://api.statuspage.io/v1
security:
- api_key: []
tags:
- description: Operations about permissions
  name: permissions
- description: |
    Operations about status embed configs.
  name: status embed config
  x-displayName: Status Embed Config
- description: |
    Your page profile drives basic settings for your status page including your company name,
    notification preferences, and time zone.
  name: pages
  x-displayName: Pages
- description: |
    Page access users allow you to limit people who can see your status page via a login. It
    also allows you to limit the components and metrics each status page visitor can see,
    customizing the status page for their needs.

    You will need Statuspage to switch your page type to audience-specific before these API
    endpoints have any effect on your status page.
  name: page access users
  x-displayName: Page Access Users
- name: page access user components
  x-displayName: Page Access User Components
- name: page access user metrics
  x-displayName: Page Access User Metrics
- description: |
    Page access groups allow you to create a grouping of components, metrics and people who
    can see your status page via a login, customizing the status page for their needs.

    You will need Statuspage to switch your page type to audience-specific before these API
    endpoints have any effect on your status page.
  name: page access groups
  x-displayName: Page Access Groups
- name: page access group components
  x-displayName: Page Access Group Components
- description: |
    Subscribers are those that receive notifications via email, sms, Slack, or webhook to incidents
    that are reported and subsequently updated.

    Subscribers can be subscribed to:
    *  a status page, where they get all updates to every incident automatically,
    *  one or more components of a status page, where they get all updates to those
       components automatically, or
    *  a specific incident, where they will only receive notifications for updates to that
       incident after they subscribed (not applicable for Slack subscribers).

    If a (page or component) subscriber fails to receive a notification, they will be
    [quarantined](https://help.statuspage.io/knowledge_base/topics/quarantined-subscribers).
    Quarantined subscribers are excluded from API responses and interactions by default.
  name: subscribers
  x-displayName: Subscribers
- description: |
    Templates allow you to set a pre-filled name and message that can be used later to save time when creating an incident or scheduling a maintenance.
  name: templates
  x-displayName: Templates
- description: |
    Incidents are critical events that have occurred with your product or service that you
    want to communicate to your users. They come in three flavors: historical, realtime, and
    scheduled.

    **Historical**: historical incidents are submitted to accuractely reflect past incidents
    from your infrastructure that occurred before you created your Statuspage account.

    **Realtime**: realtime incidents are created when something unexpected is affecting your
    infrastructure. Notifications are sent out to your subscribers informing them of the
    incident, and it is displayed prominently at the top of your status page. This is the
    most common incident type.

    **Scheduled**: scheduled incidents are planned outages or maintenance periods coming
    up in the future. Notifications are sent out to your subscribers informing them of the
    planned incident, and additional options are available to remind subscribers 60 minutes
    before the incident start and to automatically transition the incident to In Progress
    at the start of the incident maintenance period.
  name: incidents
  x-displayName: Incidents
- name: incident updates
  x-displayName: Incident Updates
- name: incident subscribers
  x-displayName: Incident Subscribers
- description: |
    Postmortems are a great way to post information about an incident after it has passed.
    They generally contain detailed information about the events that caused the incident,
    mitigation steps to stop it from happening, and followup work that has and will occur
    to ensure similar incidents do not occur in the future. After Postmortems are authored
    they can be sent to customers via email notifications or Twitter, and will show on the
    incident details page.
  name: incident postmortem
  x-displayName: Incident Postmortem
- description: |
    Components are the individual pieces of infrastructure that are listed on your status
    page.  This endpoint is used primarily to update status on individual components in the
    event of an outage or for degraded performance.
  name: components
  x-displayName: Components
- description: |
    Component groups provide a way to organize components. This endpoint can be used to
    list, create, update or delete component groups. When a group is deleted, its child
    components will be orphaned. Note: A group cannot be empty, so if all the child
    components are deleted, the group will be deleted automatically. Another implication of
    this is that components must be created before their groups, when a group is created it
    will require a list of component IDs.
  name: component groups
  x-displayName: Component Groups
- description: |
    System metrics are a great way to build trust and transparency around your organization,
    and ensure that your page is doing work for you each and every day. Submitting data for
    a custom metric is as easy as sending a POST request with the timestamp and value of the
    data point.

    Take note that there are a couple constraints and considerations when submitting data:

    * At minimum, one data point must be submitted every **5 minutes**. If there is a lag in
      data, the gap will be reflected on the charts for the "Day" view.

    * Each data point is cast to its nearest **30s interval**, giving us a maximum of 10 data
      points per 5 minute period. Submitting multiple data points near each other will result
      in the last data point being the only one stored.

    * The timestamp value returned in the body of the response will be the **casted timestamp**
      used to store your data.

    * Data can, and should, be backfilled up to **28 days** in the past.
  name: metrics
  x-displayName: Metrics
- name: metric providers
  x-displayName: Metric Providers
- description: |
    Users are owned by an organization, and have access to all pages and elements owned by
    the pages under a given organization.
    <br /><br />
    **Important note**
    <br />
    User management endpoints are not available for organizations using Atlassian accounts. These endpoints will be deprecated and will no longer work when all Statuspage accounts are migrated to Atlassian accounts.
  name: users
  x-displayName: Users
paths:
  /pages:
    get:
      description: Get a list of pages
      operationId: getPages
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Page'
                type: array
          description: Get a list of pages
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
      summary: Get a list of pages
      tags:
      - pages
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}:
    get:
      description: Get a page
      operationId: getPagesPageId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Get a page
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a page
      tags:
      - pages
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: Update a page
      operationId: patchPagesPageId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPages'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Update a page
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Update a page
      tags:
      - pages
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "page[name]=string" \
            -d "page[domain]=string" \
            -d "page[url]=string"
    put:
      description: Update a page
      operationId: putPagesPageId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPages'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Update a page
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Update a page
      tags:
      - pages
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "page[name]=string" \
            -d "page[domain]=string" \
            -d "page[url]=string"
  /pages/{page_id}/page_access_users:
    get:
      description: Get a list of page access users
      operationId: getPagesPageIdPageAccessUsers
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Email address to search for
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - description: Page offset to fetch. Beginning February 28, 2023, this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page. Beginning February 28,
          2023, a default and maximum limit of 100 will be imposed and this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PageAccessUser'
                type: array
          description: Get a list of page access users
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of page access users
      tags:
      - page access users
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      description: Add a page access user
      operationId: postPagesPageIdPageAccessUsers
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdPageAccessUsers'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Add a page access user
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The request could not be processed due to a conflict in resource
            state.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Add a page access user
      tags:
      - page access users
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "page_access_user[external_login]=string" \
            -d "page_access_user[email]=string" \
            -d "page_access_user[page_access_group_ids][]=your-id"
  /pages/{page_id}/page_access_users/{page_access_user_id}:
    delete:
      description: Delete page access user
      operationId: deletePagesPageIdPageAccessUsersPageAccessUserId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Delete page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Delete page access user
      tags:
      - page access users
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    get:
      description: Get page access user
      operationId: getPagesPageIdPageAccessUsersPageAccessUserId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Get page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get page access user
      tags:
      - page access users
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: Update page access user
      operationId: patchPagesPageIdPageAccessUsersPageAccessUserId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Update page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Update page access user
      tags:
      - page access users
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "page_access_user[external_login]=string" \
            -d "page_access_user[email]=string" \
            -d "page_access_user[page_access_group_ids][]=your-id"
    put:
      description: Update page access user
      operationId: putPagesPageIdPageAccessUsersPageAccessUserId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Update page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Update page access user
      tags:
      - page access users
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "page_access_user[external_login]=string" \
            -d "page_access_user[email]=string" \
            -d "page_access_user[page_access_group_ids][]=your-id"
  /pages/{page_id}/page_access_users/{page_access_user_id}/components:
    delete:
      description: Remove components for page access user
      operationId: deletePagesPageIdPageAccessUsersPageAccessUserIdComponents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deletePagesPageIdPageAccessUsersPageAccessUserIdComponents'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Remove components for page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Remove components for page access user
      tags:
      - page access user components
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE \
            -d "component_ids[]=your-id"
    get:
      description: Get components for page access user
      operationId: getPagesPageIdPageAccessUsersPageAccessUserIdComponents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch. Beginning February 28, 2023, this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page. Beginning February 28,
          2023, a default and maximum limit of 100 will be imposed and this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Component'
                type: array
          description: Get components for page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get components for page access user
      tags:
      - page access user components
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: Add components for page access user
      operationId: patchPagesPageIdPageAccessUsersPageAccessUserIdComponents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdPageAccessUsersPageAccessUserIdComponents'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Add components for page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Add components for page access user
      tags:
      - page access user components
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_ids[]=your-id"
    post:
      description: Replace components for page access user
      operationId: postPagesPageIdPageAccessUsersPageAccessUserIdComponents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdPageAccessUsersPageAccessUserIdComponents'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Replace components for page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Replace components for page access user
      tags:
      - page access user components
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "component_ids[]=your-id"
    put:
      description: Add components for page access user
      operationId: putPagesPageIdPageAccessUsersPageAccessUserIdComponents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdPageAccessUsersPageAccessUserIdComponents'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Add components for page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Add components for page access user
      tags:
      - page access user components
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_ids[]=your-id"
  /pages/{page_id}/page_access_users/{page_access_user_id}/components/{component_id}:
    delete:
      description: Remove component for page access user
      operationId: deletePagesPageIdPageAccessUsersPageAccessUserIdComponentsComponentId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component identifier
        explode: false
        in: path
        name: component_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Remove component for page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Remove component for page access user
      tags:
      - page access user components
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /pages/{page_id}/page_access_users/{page_access_user_id}/metrics:
    delete:
      description: Delete metrics for page access user
      operationId: deletePagesPageIdPageAccessUsersPageAccessUserIdMetrics
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deletePagesPageIdPageAccessUsersPageAccessUserIdMetrics'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Delete metrics for page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Delete metrics for page access user
      tags:
      - page access user metrics
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    get:
      description: Get metrics for page access user
      operationId: getPagesPageIdPageAccessUsersPageAccessUserIdMetrics
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch. Beginning February 28, 2023, this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page. Beginning February 28,
          2023, a default and maximum limit of 100 will be imposed and this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Metric'
                type: array
          description: Get metrics for page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get metrics for page access user
      tags:
      - page access user metrics
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: Add metrics for page access user
      operationId: patchPagesPageIdPageAccessUsersPageAccessUserIdMetrics
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdPageAccessUsersPageAccessUserIdMetrics'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Add metrics for page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Add metrics for page access user
      tags:
      - page access user metrics
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "metric_ids[]=your-id"
    post:
      description: Replace metrics for page access user
      operationId: postPagesPageIdPageAccessUsersPageAccessUserIdMetrics
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdPageAccessUsersPageAccessUserIdMetrics'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Replace metrics for page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Replace metrics for page access user
      tags:
      - page access user metrics
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "metric_ids[]=your-id"
    put:
      description: Add metrics for page access user
      operationId: putPagesPageIdPageAccessUsersPageAccessUserIdMetrics
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdPageAccessUsersPageAccessUserIdMetrics'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Add metrics for page access user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Add metrics for page access user
      tags:
      - page access user metrics
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "metric_ids[]=your-id"
  /pages/{page_id}/page_access_users/{page_access_user_id}/metrics/{metric_id}:
    delete:
      description: Delete metric for page access user
      operationId: deletePagesPageIdPageAccessUsersPageAccessUserIdMetricsMetricId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access User Identifier
        explode: false
        in: path
        name: page_access_user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of metric requested
        explode: false
        in: path
        name: metric_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
          description: Delete metric for page access user
      summary: Delete metric for page access user
      tags:
      - page access user metrics
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/metrics/{metric_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /pages/{page_id}/page_access_groups:
    get:
      description: Get a list of page access groups
      operationId: getPagesPageIdPageAccessGroups
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch. Beginning February 28, 2023, this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page. Beginning February 28,
          2023, a default and maximum limit of 100 will be imposed and this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PageAccessGroup'
                type: array
          description: Get a list of page access groups
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of page access groups
      tags:
      - page access groups
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      description: Create a page access group
      operationId: postPagesPageIdPageAccessGroups
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdPageAccessGroups'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
          description: Create a page access group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Create a page access group
      tags:
      - page access groups
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "page_access_group[name]=string" \
            -d "page_access_group[component_ids][]=your-id" \
            -d "page_access_group[metric_ids][]=your-id"
  /pages/{page_id}/page_access_groups/{page_access_group_id}:
    delete:
      description: Remove a page access group
      operationId: deletePagesPageIdPageAccessGroupsPageAccessGroupId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access Group Identifier
        explode: false
        in: path
        name: page_access_group_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
          description: Remove a page access group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Remove a page access group
      tags:
      - page access groups
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups/{page_access_group_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    get:
      description: Get a page access group
      operationId: getPagesPageIdPageAccessGroupsPageAccessGroupId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access Group Identifier
        explode: false
        in: path
        name: page_access_group_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
          description: Get a page access group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a page access group
      tags:
      - page access groups
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups/{page_access_group_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: Update a page access group
      operationId: patchPagesPageIdPageAccessGroupsPageAccessGroupId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access Group Identifier
        explode: false
        in: path
        name: page_access_group_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdPageAccessGroups'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
          description: Update a page access group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Update a page access group
      tags:
      - page access groups
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups/{page_access_group_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "page_access_group[name]=string" \
            -d "page_access_group[component_ids][]=your-id" \
            -d "page_access_group[metric_ids][]=your-id"
    put:
      description: Update a page access group
      operationId: putPagesPageIdPageAccessGroupsPageAccessGroupId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access Group Identifier
        explode: false
        in: path
        name: page_access_group_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdPageAccessGroups'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
          description: Update a page access group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Update a page access group
      tags:
      - page access groups
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups/{page_access_group_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "page_access_group[name]=string" \
            -d "page_access_group[component_ids][]=your-id" \
            -d "page_access_group[metric_ids][]=your-id"
  /pages/{page_id}/page_access_groups/{page_access_group_id}/components:
    delete:
      description: Delete components for a page access group
      operationId: deletePagesPageIdPageAccessGroupsPageAccessGroupIdComponents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access Group Identifier
        explode: false
        in: path
        name: page_access_group_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deletePagesPageIdPageAccessGroupsPageAccessGroupIdComponents'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
          description: Delete components for a page access group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Delete components for a page access group
      tags:
      - page access group components
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups{page_access_group_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    get:
      description: List components for a page access group
      operationId: getPagesPageIdPageAccessGroupsPageAccessGroupIdComponents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access Group Identifier
        explode: false
        in: path
        name: page_access_group_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch. Beginning February 28, 2023, this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page. Beginning February 28,
          2023, a default and maximum limit of 100 will be imposed and this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Component'
                type: array
          description: List components for a page access group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: List components for a page access group
      tags:
      - page access group components
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups{page_access_group_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: Add components to page access group
      operationId: patchPagesPageIdPageAccessGroupsPageAccessGroupIdComponents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access Group Identifier
        explode: false
        in: path
        name: page_access_group_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdPageAccessGroupsPageAccessGroupIdComponents'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
          description: Add components to page access group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Add components to page access group
      tags:
      - page access group components
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups{page_access_group_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_ids[]=your-id"
    post:
      description: Replace components for a page access group
      operationId: postPagesPageIdPageAccessGroupsPageAccessGroupIdComponents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access Group Identifier
        explode: false
        in: path
        name: page_access_group_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdPageAccessGroupsPageAccessGroupIdComponents'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
          description: Replace components for a page access group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Replace components for a page access group
      tags:
      - page access group components
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups{page_access_group_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "component_ids[]=your-id"
    put:
      description: Add components to page access group
      operationId: putPagesPageIdPageAccessGroupsPageAccessGroupIdComponents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access Group Identifier
        explode: false
        in: path
        name: page_access_group_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdPageAccessGroupsPageAccessGroupIdComponents'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
          description: Add components to page access group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Add components to page access group
      tags:
      - page access group components
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups{page_access_group_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_ids[]=your-id"
  /pages/{page_id}/page_access_groups/{page_access_group_id}/components/{component_id}:
    delete:
      description: Remove a component from a page access group
      operationId: deletePagesPageIdPageAccessGroupsPageAccessGroupIdComponentsComponentId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page Access Group Identifier
        explode: false
        in: path
        name: page_access_group_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component identifier
        explode: false
        in: path
        name: component_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
          description: Remove a component from a page access group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Remove a component from a page access group
      tags:
      - page access group components
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups{page_access_group_id}/components/{component_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /pages/{page_id}/subscribers/resend_confirmation:
    post:
      description: Resend confirmations to a list of subscribers
      operationId: postPagesPageIdSubscribersResendConfirmation
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdSubscribersResendConfirmation'
        required: true
      responses:
        "201":
          description: Resend confirmations to a list of subscribers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Resend confirmations to a list of subscribers
      tags:
      - subscribers
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/resend_confirmation \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "subscribers[]=your-id"
  /pages/{page_id}/subscribers/unsubscribe:
    post:
      description: Unsubscribe a list of subscribers
      operationId: postPagesPageIdSubscribersUnsubscribe
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdSubscribersUnsubscribe'
        required: true
      responses:
        "201":
          description: Unsubscribe a list of subscribers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Unsubscribe a list of subscribers
      tags:
      - subscribers
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/unsubscribe \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "subscribers[]=your-id"
  /pages/{page_id}/subscribers/reactivate:
    post:
      description: Reactivate a list of quarantined subscribers
      operationId: postPagesPageIdSubscribersReactivate
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdSubscribersReactivate'
        required: true
      responses:
        "201":
          description: Reactivate a list of quarantined subscribers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Reactivate a list of subscribers
      tags:
      - subscribers
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/reactivate \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "subscribers[]=your-id"
  /pages/{page_id}/subscribers/histogram_by_state:
    get:
      description: Get a histogram of subscribers by type and then state
      operationId: getPagesPageIdSubscribersHistogramByState
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberCountByTypeAndState'
          description: Get a histogram of subscribers by type and then state
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Get a histogram of subscribers by type and then state
      tags:
      - subscribers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/histogram_by_state \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/subscribers/count:
    get:
      description: Get a count of subscribers by type
      operationId: getPagesPageIdSubscribersCount
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: If this is present, only count subscribers of this type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - email
          - sms
          - slack
          - webhook
          - integration_partner
          type: string
        style: form
      - description: If this is present, only count subscribers in this state. Specify
          state "all" to count subscribers in any states.
        explode: true
        in: query
        name: state
        required: false
        schema:
          default: active
          enum:
          - active
          - unconfirmed
          - quarantined
          - all
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberCountByType'
          description: Get a count of subscribers by type
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a count of subscribers by type
      tags:
      - subscribers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/count \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/subscribers/unsubscribed:
    get:
      description: Get a list of unsubscribed subscribers
      operationId: getPagesPageIdSubscribersUnsubscribed
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch. Beginning February 28, 2023, this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page. Beginning February 28,
          2023, a default and maximum limit of 100 will be imposed and this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscriber'
                type: array
          description: Get a list of unsubscribed subscribers
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of unsubscribed subscribers
      tags:
      - subscribers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/unsubscribed \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/subscribers:
    get:
      description: Get a list of subscribers
      operationId: getPagesPageIdSubscribers
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: If this is specified, search the contact information (email,
          endpoint, or phone number) for the provided value. This parameter doesn’t
          support searching for Slack subscribers.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: If specified, only return subscribers of the indicated type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - email
          - sms
          - webhook
          - slack
          - integration_partner
          type: string
        style: form
      - description: If this is present, only return subscribers in this state. Specify
          state "all" to find subscribers in any states.
        explode: true
        in: query
        name: state
        required: false
        schema:
          default: active
          enum:
          - active
          - unconfirmed
          - quarantined
          - all
          type: string
        style: form
      - description: The maximum number of rows to return. If a text query string
          is specified (q=), the default and maximum limit is 100. If the text query
          string is not specified, the default and maximum limit are not set, and
          not providing a limit will return all the subscribers. Beginning February
          28, 2023, a default limit of 100 will be imposed and this endpoint will
          return paginated data (i.e. will no longer return all subscribers) even
          if this query parameter is not provided.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The page offset of subscribers. The first page is page 0, the
          second page 1, etc. This skips page * limit subscribers. Beginning February
          28, 2023, this endpoint will return paginated data even if this query parameter
          is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: 'The field on which to sort: ''primary'' to indicate sorting
          by the identifying field, ''created_at'' for sorting by creation timestamp,
          ''quarantined_at'' for sorting by quarantine timestamp, and ''relevance''
          which sorts by the relevancy of the search text. ''relevance'' is not a
          valid parameter if no search text is supplied.'
        explode: true
        in: query
        name: sort_field
        required: false
        schema:
          default: primary
          enum:
          - primary
          - created_at
          - quarantined_at
          - relevance
          type: string
        style: form
      - description: The sort direction of the listing.
        explode: true
        in: query
        name: sort_direction
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscriber'
                type: array
          description: Get a list of subscribers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Get a list of subscribers
      tags:
      - subscribers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      description: Create a subscriber. Not applicable for Slack subscribers.
      operationId: postPagesPageIdSubscribers
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdSubscribers'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: Create a subscriber. Not applicable for Slack subscribers.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Create a subscriber
      tags:
      - subscribers
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "subscriber[email]=string"
  /pages/{page_id}/subscribers/{subscriber_id}/resend_confirmation:
    post:
      description: Resend confirmation to a subscriber
      operationId: postPagesPageIdSubscribersSubscriberIdResendConfirmation
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Subscriber Identifier
        explode: false
        in: path
        name: subscriber_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: Resend confirmation to a subscriber
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Resend confirmation to a subscriber
      tags:
      - subscribers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/{subscriber_id}/resend_confirmation \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST
  /pages/{page_id}/subscribers/{subscriber_id}:
    delete:
      description: Unsubscribe a subscriber
      operationId: deletePagesPageIdSubscribersSubscriberId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Subscriber Identifier
        explode: false
        in: path
        name: subscriber_id
        required: true
        schema:
          type: string
        style: simple
      - description: If skip_unsubscription_notification is true, the subscriber does
          not receive any notifications when they are unsubscribed.
        explode: true
        in: query
        name: skip_unsubscription_notification
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: Unsubscribe a subscriber
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Unsubscribe a subscriber
      tags:
      - subscribers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/{subscriber_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    get:
      description: Get a subscriber
      operationId: getPagesPageIdSubscribersSubscriberId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Subscriber Identifier
        explode: false
        in: path
        name: subscriber_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: Get a subscriber
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a subscriber
      tags:
      - subscribers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/{subscriber_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: Update a subscriber
      operationId: patchPagesPageIdSubscribersSubscriberId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Subscriber Identifier
        explode: false
        in: path
        name: subscriber_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdSubscribers'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: Update a subscriber
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Update a subscriber
      tags:
      - subscribers
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/{subscriber_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_ids[]=your-id"
  /pages/{page_id}/incident_templates:
    get:
      description: Get a list of templates
      operationId: getPagesPageIdIncidentTemplates
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IncidentTemplate'
                type: array
          description: Get a list of templates
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
      summary: Get a list of templates
      tags:
      - templates
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incident_templates \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      description: Create a template
      operationId: postPagesPageIdIncidentTemplates
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdIncidentTemplates'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTemplate'
          description: Create a template
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Create a template
      tags:
      - templates
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incident_templates \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "template[name]=string" \
            -d "template[title]=string" \
            -d "template[body]=string"
  /pages/{page_id}/incidents:
    get:
      description: Get a list of incidents
      operationId: getPagesPageIdIncidents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: If this is specified, search for the text query string in the
          incidents' name, status, postmortem_body, and incident_updates fields.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of rows to return per page. The default and
          maximum limit is 100.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Page offset to fetch.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Incident'
                type: array
          description: Get a list of incidents
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of incidents
      tags:
      - incidents
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      description: Create an incident
      operationId: postPagesPageIdIncidents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdIncidents'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: Create an incident
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Create an incident
      tags:
      - incidents
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "incident[name]=string" \
            -d "incident[status]=string" \
            -d "incident[body]=string"
  /pages/{page_id}/incidents/active_maintenance:
    get:
      description: Get a list of active maintenances
      operationId: getPagesPageIdIncidentsActiveMaintenance
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Incident'
                type: array
          description: Get a list of active maintenances
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of active maintenances
      tags:
      - incidents
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/active_maintenance \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/incidents/upcoming:
    get:
      description: Get a list of upcoming incidents
      operationId: getPagesPageIdIncidentsUpcoming
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Incident'
                type: array
          description: Get a list of upcoming incidents
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of upcoming incidents
      tags:
      - incidents
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/upcoming \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/incidents/scheduled:
    get:
      description: Get a list of scheduled incidents
      operationId: getPagesPageIdIncidentsScheduled
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Incident'
                type: array
          description: Get a list of scheduled incidents
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of scheduled incidents
      tags:
      - incidents
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/scheduled \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/incidents/unresolved:
    get:
      description: Get a list of unresolved incidents
      operationId: getPagesPageIdIncidentsUnresolved
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Incident'
                type: array
          description: Get a list of unresolved incidents
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of unresolved incidents
      tags:
      - incidents
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/unresolved \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/incidents/{incident_id}:
    delete:
      description: Delete an incident
      operationId: deletePagesPageIdIncidentsIncidentId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: Delete an incident
      summary: Delete an incident
      tags:
      - incidents
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    get:
      description: Get an incident
      operationId: getPagesPageIdIncidentsIncidentId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: Get an incident
      summary: Get an incident
      tags:
      - incidents
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: Update an incident
      operationId: patchPagesPageIdIncidentsIncidentId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdIncidents'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: Update an incident
      summary: Update an incident
      tags:
      - incidents
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "incident[name]=string" \
            -d "incident[status]=string" \
            -d "incident[body]=string"
    put:
      description: Update an incident
      operationId: putPagesPageIdIncidentsIncidentId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdIncidents'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: Update an incident
      summary: Update an incident
      tags:
      - incidents
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "incident[name]=string" \
            -d "incident[status]=string" \
            -d "incident[body]=string"
  /pages/{page_id}/incidents/{incident_id}/incident_updates/{incident_update_id}:
    patch:
      description: Update a previous incident update
      operationId: patchPagesPageIdIncidentsIncidentIdIncidentUpdatesIncidentUpdateId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Update Identifier
        explode: false
        in: path
        name: incident_update_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdIncidentsIncidentIdIncidentUpdates'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentUpdate'
          description: Update a previous incident update
      summary: Update a previous incident update
      tags:
      - incident updates
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/incident_updates/{incident_update_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "incident_update[wants_twitter_update]=true" \
            -d "incident_update[body]=string"
    put:
      description: Update a previous incident update
      operationId: putPagesPageIdIncidentsIncidentIdIncidentUpdatesIncidentUpdateId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Update Identifier
        explode: false
        in: path
        name: incident_update_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdIncidentsIncidentIdIncidentUpdates'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentUpdate'
          description: Update a previous incident update
      summary: Update a previous incident update
      tags:
      - incident updates
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/incident_updates/{incident_update_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "incident_update[wants_twitter_update]=true" \
            -d "incident_update[body]=string"
  /pages/{page_id}/incidents/{incident_id}/subscribers:
    get:
      description: Get a list of incident subscribers
      operationId: getPagesPageIdIncidentsIncidentIdSubscribers
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch. Beginning February 28, 2023, this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page. Beginning February 28,
          2023, a default and maximum limit of 100 will be imposed and this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscriber'
                type: array
          description: Get a list of incident subscribers
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of incident subscribers
      tags:
      - incident subscribers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/subscribers \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      description: Create an incident subscriber
      operationId: postPagesPageIdIncidentsIncidentIdSubscribers
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdIncidentsIncidentIdSubscribers'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: Create an incident subscriber
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Create an incident subscriber
      tags:
      - incident subscribers
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/subscribers \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "email=string"
  /pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}:
    delete:
      description: Unsubscribe an incident subscriber
      operationId: deletePagesPageIdIncidentsIncidentIdSubscribersSubscriberId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      - description: Subscriber Identifier
        explode: false
        in: path
        name: subscriber_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: Unsubscribe an incident subscriber
      summary: Unsubscribe an incident subscriber
      tags:
      - incident subscribers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    get:
      description: Get an incident subscriber
      operationId: getPagesPageIdIncidentsIncidentIdSubscribersSubscriberId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      - description: Subscriber Identifier
        explode: false
        in: path
        name: subscriber_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: Get an incident subscriber
      summary: Get an incident subscriber
      tags:
      - incident subscribers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}/resend_confirmation:
    post:
      description: Resend confirmation to an incident subscriber
      operationId: postPagesPageIdIncidentsIncidentIdSubscribersSubscriberIdResendConfirmation
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      - description: Subscriber Identifier
        explode: false
        in: path
        name: subscriber_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: Resend confirmation to an incident subscriber
      summary: Resend confirmation to an incident subscriber
      tags:
      - incident subscribers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}/resend_confirmation \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST
  /pages/{page_id}/incidents/{incident_id}/postmortem:
    delete:
      description: Delete Postmortem
      operationId: deletePagesPageIdIncidentsIncidentIdPostmortem
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Delete Postmortem
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Delete Postmortem
      tags:
      - incident postmortem
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/postmortem \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    get:
      description: Get Postmortem
      operationId: getPagesPageIdIncidentsIncidentIdPostmortem
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Postmortem'
          description: Get Postmortem
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get Postmortem
      tags:
      - incident postmortem
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/postmortem \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      description: Create Postmortem
      operationId: putPagesPageIdIncidentsIncidentIdPostmortem
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdIncidentsIncidentIdPostmortem'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Postmortem'
          description: Create Postmortem
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
      summary: Create Postmortem
      tags:
      - incident postmortem
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/postmortem \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PUT \
            -d "postmortem[body_draft]=string"
  /pages/{page_id}/incidents/{incident_id}/postmortem/publish:
    put:
      description: Publish Postmortem
      operationId: putPagesPageIdIncidentsIncidentIdPostmortemPublish
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdIncidentsIncidentIdPostmortemPublish'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Postmortem'
          description: Publish Postmortem
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Publish Postmortem
      tags:
      - incident postmortem
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/postmortem/publish \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PUT \
            -d "postmortem[notify_tweets]=true" \
            -d "postmortem[notify_subscribers]=true"
  /pages/{page_id}/incidents/{incident_id}/postmortem/revert:
    put:
      description: Revert Postmortem
      operationId: putPagesPageIdIncidentsIncidentIdPostmortemRevert
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Incident Identifier
        explode: false
        in: path
        name: incident_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Postmortem'
          description: Revert Postmortem
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Revert Postmortem
      tags:
      - incident postmortem
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/postmortem/revert \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PUT
  /pages/{page_id}/components:
    get:
      description: Get a list of components
      operationId: getPagesPageIdComponents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch. Beginning February 28, 2023, this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page. Beginning February 28,
          2023, a default and maximum limit of 100 will be imposed and this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          maximum: 1100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Component'
                type: array
          description: Get a list of components
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
      summary: Get a list of components
      tags:
      - components
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      description: Create a component
      operationId: postPagesPageIdComponents
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdComponents'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: Create a component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Create a component
      tags:
      - components
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "component[description]=string" \
            -d "component[status]=string" \
            -d "component[name]=string"
  /pages/{page_id}/components/{component_id}:
    delete:
      description: Delete a component
      operationId: deletePagesPageIdComponentsComponentId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component identifier
        explode: false
        in: path
        name: component_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Delete a component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Delete a component
      tags:
      - components
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    get:
      description: Get a component
      operationId: getPagesPageIdComponentsComponentId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component identifier
        explode: false
        in: path
        name: component_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: Get a component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a component
      tags:
      - components
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: If group_id is "null" then the component will be removed from a
        group.
      operationId: patchPagesPageIdComponentsComponentId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component identifier
        explode: false
        in: path
        name: component_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdComponents'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: Update a component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Update a component
      tags:
      - components
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component[description]=string" \
            -d "component[status]=string" \
            -d "component[name]=string"
    put:
      description: If group_id is "null" then the component will be removed from a
        group.
      operationId: putPagesPageIdComponentsComponentId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component identifier
        explode: false
        in: path
        name: component_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdComponents'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: Update a component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Update a component
      tags:
      - components
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component[description]=string" \
            -d "component[status]=string" \
            -d "component[name]=string"
  /pages/{page_id}/components/{component_id}/uptime:
    get:
      description: Get uptime data for a component that has uptime showcase enabled
      operationId: getPagesPageIdComponentsComponentIdUptime
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component identifier
        explode: false
        in: path
        name: component_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentUptime'
          description: Get uptime data for a component that has uptime showcase enabled
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Get uptime data for a component
      tags:
      - components
  /pages/{page_id}/components/{component_id}/page_access_users:
    delete:
      description: Remove page access users from component
      operationId: deletePagesPageIdComponentsComponentIdPageAccessUsers
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component identifier
        explode: false
        in: path
        name: component_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: Remove page access users from component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Remove page access users from component
      tags:
      - components
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id}/page_access_users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    post:
      description: Add page access users to a component
      operationId: postPagesPageIdComponentsComponentIdPageAccessUsers
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component identifier
        explode: false
        in: path
        name: component_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                page_access_user_ids:
                  description: List of page access users to add to component
                  items:
                    type: string
                  type: array
              required:
              - page_access_user_ids
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: Add page access users to a component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Add page access users to a component
      tags:
      - components
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id}/page_access_users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "page_access_user_ids[]=your-id"
  /pages/{page_id}/components/{component_id}/page_access_groups:
    delete:
      description: Remove page access groups from a component
      operationId: deletePagesPageIdComponentsComponentIdPageAccessGroups
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component identifier
        explode: false
        in: path
        name: component_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: Remove page access groups from a component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Remove page access groups from a component
      tags:
      - components
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id}/page_access_groups \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    post:
      description: Add page access groups to a component
      operationId: postPagesPageIdComponentsComponentIdPageAccessGroups
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component identifier
        explode: false
        in: path
        name: component_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: Add page access groups to a component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Add page access groups to a component
      tags:
      - components
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id}/page_access_groups \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "page_access_group_ids[]=your-id"
  /pages/{page_id}/component-groups:
    get:
      description: Get a list of component groups
      operationId: getPagesPageIdComponentGroups
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch. Beginning February 28, 2023, this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page. Beginning February 28,
          2023, a default and maximum limit of 100 will be imposed and this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupComponent'
                type: array
          description: Get a list of component groups
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of component groups
      tags:
      - component groups
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/component-groups \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      description: Create a component group
      operationId: postPagesPageIdComponentGroups
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdComponentGroups'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupComponent'
          description: Create a component group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Create a component group
      tags:
      - component groups
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/component-groups \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "component_group[components][]=your-id" \
            -d "component_group[name]=string"
  /pages/{page_id}/component-groups/{id}:
    delete:
      description: Delete a component group
      operationId: deletePagesPageIdComponentGroupsId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component group identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupComponent'
          description: Delete a component group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Delete a component group
      tags:
      - component groups
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/component-groups/{id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    get:
      description: Get a component group
      operationId: getPagesPageIdComponentGroupsId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component group identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupComponent'
          description: Get a component group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a component group
      tags:
      - component groups
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/component-groups/{id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: Update a component group
      operationId: patchPagesPageIdComponentGroupsId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component group identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdComponentGroups'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupComponent'
          description: Update a component group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Update a component group
      tags:
      - component groups
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/component-groups/{id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_group[components][]=your-id" \
            -d "component_group[name]=string"
    put:
      description: Update a component group
      operationId: putPagesPageIdComponentGroupsId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component group identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdComponentGroups'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupComponent'
          description: Update a component group
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Update a component group
      tags:
      - component groups
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/component-groups/{id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_group[components][]=your-id" \
            -d "component_group[name]=string"
  /pages/{page_id}/component-groups/{id}/uptime:
    get:
      description: Get uptime data for a component group that has uptime showcase
        enabled for at least one component.
      operationId: getPagesPageIdComponentGroupsIdUptime
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Component group identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentGroupUptime'
          description: Get uptime data for a component group that has uptime showcase
            enabled for at least one component.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Get uptime data for a component group
      tags:
      - component groups
  /pages/{page_id}/metrics/data:
    post:
      description: Add data points to metrics
      operationId: postPagesPageIdMetricsData
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdMetricsData'
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                response:
                  value:
                    hnrmmgry6jm0:
                    - timestamp: 1676023991
                      value: 123.456
              schema:
                $ref: '#/components/schemas/MetricAddResponse'
          description: Data Point is submitted and is currently being added to the
            metrics
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Method not allowed.
      summary: Add data points to metrics
      tags:
      - metrics
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/data \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "data[metric_id][][timestamp]=0" \
            -d "data[metric_id][][value]=0"
  /pages/{page_id}/metrics:
    get:
      description: Get a list of metrics
      operationId: getPagesPageIdMetrics
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch. Beginning February 28, 2023, this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page. Beginning February 28,
          2023, a default and maximum limit of 100 will be imposed and this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
          description: Get a list of metrics
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of metrics
      tags:
      - metrics
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/metrics/{metric_id}:
    delete:
      description: Delete a metric
      operationId: deletePagesPageIdMetricsMetricId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metric Identifier
        explode: false
        in: path
        name: metric_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
          description: Delete a metric
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Delete a metric
      tags:
      - metrics
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/{metric_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    get:
      description: Get a metric
      operationId: getPagesPageIdMetricsMetricId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metric Identifier
        explode: false
        in: path
        name: metric_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
          description: Get a metric
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a metric
      tags:
      - metrics
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/{metric_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: Update a metric
      operationId: patchPagesPageIdMetricsMetricId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metric Identifier
        explode: false
        in: path
        name: metric_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdMetrics'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
          description: Update a metric
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Update a metric
      tags:
      - metrics
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/{metric_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "metric[name]=string"
    put:
      description: Update a metric
      operationId: putPagesPageIdMetricsMetricId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metric Identifier
        explode: false
        in: path
        name: metric_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdMetrics'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
          description: Update a metric
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Update a metric
      tags:
      - metrics
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/{metric_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "metric[name]=string"
  /pages/{page_id}/metrics/{metric_id}/data:
    delete:
      description: Reset data for a metric
      operationId: deletePagesPageIdMetricsMetricIdData
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metric Identifier
        explode: false
        in: path
        name: metric_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
          description: Reset data for a metric
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Reset data for a metric
      tags:
      - metrics
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/{metric_id}/data \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    post:
      description: Add data to a metric
      operationId: postPagesPageIdMetricsMetricIdData
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metric Identifier
        explode: false
        in: path
        name: metric_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdMetricsMetricIdData'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleMetricAddResponse'
          description: Add data to a metric
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Method not allowed.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Add data to a metric
      tags:
      - metrics
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/{metric_id}/data \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "data[timestamp]=0" \
            -d "data[value]=0"
  /pages/{page_id}/metrics_providers:
    get:
      description: Get a list of metric providers
      operationId: getPagesPageIdMetricsProviders
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetricsProvider'
                type: array
          description: Get a list of metric providers
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of metric providers
      tags:
      - metric providers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      description: Create a metric provider
      operationId: postPagesPageIdMetricsProviders
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdMetricsProviders'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsProvider'
          description: Create a metric provider
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Create a metric provider
      tags:
      - metric providers
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "metrics_provider[email]=string" \
            -d "metrics_provider[api_token]=string" \
            -d "metrics_provider[type]=string"
  /pages/{page_id}/metrics_providers/{metrics_provider_id}:
    delete:
      description: Delete a metric provider
      operationId: deletePagesPageIdMetricsProvidersMetricsProviderId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metric Provider Identifier
        explode: false
        in: path
        name: metrics_provider_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsProvider'
          description: Delete a metric provider
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Delete a metric provider
      tags:
      - metric providers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers/{metrics_provider_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    get:
      description: Get a metric provider
      operationId: getPagesPageIdMetricsProvidersMetricsProviderId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metric Provider Identifier
        explode: false
        in: path
        name: metrics_provider_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsProvider'
          description: Get a metric provider
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a metric provider
      tags:
      - metric providers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers/{metrics_provider_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: Update a metric provider
      operationId: patchPagesPageIdMetricsProvidersMetricsProviderId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metric Provider Identifier
        explode: false
        in: path
        name: metrics_provider_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdMetricsProviders'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsProvider'
          description: Update a metric provider
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Update a metric provider
      tags:
      - metric providers
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers/{metrics_provider_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "metrics_provider[email]=string" \
            -d "metrics_provider[api_token]=string" \
            -d "metrics_provider[type]=string"
    put:
      description: Update a metric provider
      operationId: putPagesPageIdMetricsProvidersMetricsProviderId
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metric Provider Identifier
        explode: false
        in: path
        name: metrics_provider_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdMetricsProviders'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsProvider'
          description: Update a metric provider
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Update a metric provider
      tags:
      - metric providers
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers/{metrics_provider_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "metrics_provider[email]=string" \
            -d "metrics_provider[api_token]=string" \
            -d "metrics_provider[type]=string"
  /pages/{page_id}/metrics_providers/{metrics_provider_id}/metrics:
    get:
      description: List metrics for a metric provider
      operationId: getPagesPageIdMetricsProvidersMetricsProviderIdMetrics
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metric Provider Identifier
        explode: false
        in: path
        name: metrics_provider_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch. Beginning February 28, 2023, this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page. Beginning February 28,
          2023, a default and maximum limit of 100 will be imposed and this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
          description: List metrics for a metric provider
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: List metrics for a metric provider
      tags:
      - metrics
      - metric providers
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers/{metrics_provider_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      description: Create a metric for a metric provider
      operationId: postPagesPageIdMetricsProvidersMetricsProviderIdMetrics
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metric Provider Identifier
        explode: false
        in: path
        name: metrics_provider_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdMetricsProvidersMetricsProviderIdMetrics'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
          description: Create a metric for a metric provider
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Create a metric for a metric provider
      tags:
      - metrics
      - metric providers
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers/{metrics_provider_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "metric[name]=string" \
            -d "metric[transform]=string" \
            -d "metric[suffix]=string"
  /pages/{page_id}/status_embed_config:
    get:
      description: Get status embed config settings
      operationId: getPagesPageIdStatusEmbedConfig
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusEmbedConfig'
          description: Get status embed config settings
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get status embed config settings
      tags:
      - status embed config
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/status_embed_config \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    patch:
      description: Update status embed config settings
      operationId: patchPagesPageIdStatusEmbedConfig
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdStatusEmbedConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusEmbedConfig'
          description: Update status embed config settings
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Update status embed config settings
      tags:
      - status embed config
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/status_embed_config \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "status_embed_config[position]=string" \
            -d "status_embed_config[incident_background_color]=string" \
            -d "status_embed_config[maintenance_text_color]=string"
    put:
      description: Update status embed config settings
      operationId: putPagesPageIdStatusEmbedConfig
      parameters:
      - description: Page identifier
        explode: false
        in: path
        name: page_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdStatusEmbedConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusEmbedConfig'
          description: Update status embed config settings
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Update status embed config settings
      tags:
      - status embed config
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/status_embed_config \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "status_embed_config[position]=string" \
            -d "status_embed_config[incident_background_color]=string" \
            -d "status_embed_config[maintenance_text_color]=string"
  /organizations/{organization_id}/permissions/{user_id}:
    get:
      description: Get a user's permissions
      operationId: getOrganizationsOrganizationIdPermissionsUserId
      parameters:
      - description: Organization Identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: User identifier
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    user_id: 8tmgnp4ys67h
                    pages:
                    - page_id: 7gzlwkxrvchy
                      page_configuration: false
                      incident_manager: true
                      maintenance_manager: true
                    - page_id: wgrkpldpp5m9
                      page_configuration: false
                      incident_manager: true
                      maintenance_manager: true
              schema:
                $ref: '#/components/schemas/Permissions'
          description: Get a user's permissions
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a user's permissions
      tags:
      - users
      - permissions
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/organizations/{organization_id}/permissions/{user_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      description: |-
        Update a user's role permissions. Payload should contain a mapping of pages to a set of the desired roles,
                          if the page has Role Based Access Control. Otherwise, the pages should map to an empty hash.
                          User will lose access to any pages omitted from the payload.
      operationId: putOrganizationsOrganizationIdPermissionsUserId
      parameters:
      - description: Organization Identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: User identifier
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putOrganizationsOrganizationIdPermissions'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    user_id: ldkpyg4lj0dy
                    pages:
                    - page_id: kf94ym2nz6bg
                      page_configuration: false
                      incident_manager: true
                      maintenance_manager: true
                    - page_id: m7nfhv4t6kq4
                      page_configuration: false
                      incident_manager: true
                      maintenance_manager: true
              schema:
                $ref: '#/components/schemas/Permissions'
          description: |-
            Update a user's role permissions. Payload should contain a mapping of pages to a set of the desired roles,
                              if the page has Role Based Access Control. Otherwise, the pages should map to an empty hash.
                              User will lose access to any pages omitted from the payload.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Update a user's role permissions
      tags:
      - permissions
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/organizations/{organization_id}/permissions/{user_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PUT \
            -d "pages[page_id][page_configuration]=true" \
            -d "pages[page_id][incident_manager]=true" \
            -d "pages[page_id][maintenance_manager]=true"
  /organizations/{organization_id}/users/{user_id}:
    delete:
      description: Delete a user
      operationId: deleteOrganizationsOrganizationIdUsersUserId
      parameters:
      - description: Organization Identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: User Identifier
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Delete a user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: You are not authorized to access this resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Delete a user
      tags:
      - users
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/organizations/{organization_id}/users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /organizations/{organization_id}/users:
    get:
      description: Get a list of users
      operationId: getOrganizationsOrganizationIdUsers
      parameters:
      - description: Organization Identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page offset to fetch. Beginning February 28, 2023, this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to return per page. Beginning February 28,
          2023, a default and maximum limit of 100 will be imposed and this endpoint
          will return paginated data even if this query parameter is not provided.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Get a list of users
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
      summary: Get a list of users
      tags:
      - users
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/organizations/{organization_id}/users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      description: Create a user
      operationId: postOrganizationsOrganizationIdUsers
      parameters:
      - description: Organization Identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postOrganizationsOrganizationIdUsers'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Create a user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Could not authenticate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: The requested resource could not be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
          description: Unprocessable entity
      summary: Create a user
      tags:
      - users
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/organizations/{organization_id}/users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "user[email]=string"
components:
  requestBodies:
    inline_object:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object'
  schemas:
    Page:
      description: Get a page
      example:
        country: country
        hero_cover: hero_cover
        css_link_color: css_link_color
        activity_score: 0.8008282
        allow_sms_subscribers: true
        city: city
        branding: branding
        twitter_username: twitter_username
        transactional_logo: transactional_logo
        created_at: 2000-01-23T04:56:07.000+00:00
        ip_restrictions: ip_restrictions
        page_description: page_description
        css_yellows: css_yellows
        css_graph_color: css_graph_color
        css_reds: css_reds
        css_no_data: css_no_data
        support_url: support_url
        favicon_logo: favicon_logo
        updated_at: 2000-01-23T04:56:07.000+00:00
        notifications_email_footer: notifications_email_footer
        allow_incident_subscribers: true
        id: m2b91t7vwhzx
        notifications_from_email: no-reply@status.mycompany.com
        state: state
        headline: headline
        css_blues: css_blues
        css_body_background_color: css_body_background_color
        allow_email_subscribers: true
        css_oranges: css_oranges
        hidden_from_search: true
        time_zone: UTC
        css_light_font_color: css_light_font_color
        url: https://www.mycompany.com
        viewers_must_be_team_members: true
        allow_webhook_subscribers: true
        twitter_logo: twitter_logo
        domain: status.mycompany.com
        name: My Company Status
        css_greens: css_greens
        email_logo: email_logo
        subdomain: your-subdomain.statuspage.io
        css_border_color: css_border_color
        css_font_color: css_font_color
        allow_page_subscribers: true
        allow_rss_atom_feeds: true
      properties:
        id:
          description: Page identifier
          example: m2b91t7vwhzx
          type: string
        created_at:
          description: Timestamp the record was created
          format: date-time
          type: string
        updated_at:
          description: Timestamp the record was last updated
          format: date-time
          type: string
        name:
          description: Name of your page to be displayed
          example: My Company Status
          type: string
        page_description:
          type: string
        headline:
          type: string
        branding:
          description: The main template your statuspage will use
          type: string
        subdomain:
          description: Subdomain at which to access your status page
          example: your-subdomain.statuspage.io
          type: string
        domain:
          description: CNAME alias for your status page
          example: status.mycompany.com
          type: string
        url:
          description: Website of your page.  Clicking on your statuspage image will
            link here.
          example: https://www.mycompany.com
          type: string
        support_url:
          type: string
        hidden_from_search:
          description: Should your page hide itself from search engines
          type: boolean
        allow_page_subscribers:
          description: Can your users subscribe to all notifications on the page
          type: boolean
        allow_incident_subscribers:
          description: Can your users subscribe to notifications for a single incident
          type: boolean
        allow_email_subscribers:
          description: Can your users choose to receive notifications via email
          type: boolean
        allow_sms_subscribers:
          description: Can your users choose to receive notifications via SMS
          type: boolean
        allow_rss_atom_feeds:
          description: Can your users choose to access incident feeds via RSS/Atom
            (not functional on Audience-Specific pages)
          type: boolean
        allow_webhook_subscribers:
          description: Can your users choose to receive notifications via Webhooks
          type: boolean
        notifications_from_email:
          description: Allows you to customize the email address your page notifications
            come from
          example: no-reply@status.mycompany.com
          type: string
        notifications_email_footer:
          description: Allows you to customize the footer appearing on your notification
            emails.  Accepts Markdown for formatting
          type: string
        activity_score:
          format: float
          type: number
        twitter_username:
          type: string
        viewers_must_be_team_members:
          type: boolean
        ip_restrictions:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        time_zone:
          description: Timezone configured for your page
          example: UTC
          type: string
        css_body_background_color:
          description: CSS Color
          type: string
        css_font_color:
          description: CSS Color
          type: string
        css_light_font_color:
          description: CSS Color
          type: string
        css_greens:
          description: CSS Color
          type: string
        css_yellows:
          description: CSS Color
          type: string
        css_oranges:
          description: CSS Color
          type: string
        css_blues:
          description: CSS Color
          type: string
        css_reds:
          description: CSS Color
          type: string
        css_border_color:
          description: CSS Color
          type: string
        css_graph_color:
          description: CSS Color
          type: string
        css_link_color:
          description: CSS Color
          type: string
        css_no_data:
          description: CSS Color
          type: string
        favicon_logo:
          type: string
        transactional_logo:
          type: string
        hero_cover:
          type: string
        email_logo:
          type: string
        twitter_logo:
          type: string
      type: object
    ErrorEntity:
      description: Get a list of users
      properties:
        message:
          type: string
      type: object
    patchPages:
      description: Update a page
      properties:
        page:
          $ref: '#/components/schemas/patchPages_page'
      type: object
    putPages:
      description: Update a page
      properties:
        page:
          $ref: '#/components/schemas/patchPages_page'
      type: object
    postPagesPageIdPageAccessUsers:
      description: Add a page access user
      properties:
        page_access_user:
          $ref: '#/components/schemas/postPagesPageIdPageAccessUsers_page_access_user'
      type: object
    PageAccessUser:
      description: Delete metric for page access user
      example:
        page_id: page_id
        external_login: external_login
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        page_access_group_id: page_access_group_id
        id: s1p7np39jb75
        email: user@example.com
        page_access_group_ids: '[]'
      properties:
        id:
          description: Page Access User Identifier
          example: s1p7np39jb75
          type: string
        page_id:
          type: string
        email:
          example: user@example.com
          type: string
        external_login:
          description: IDP login user id. Key is typically "uid".
          type: string
        page_access_group_id:
          type: string
        page_access_group_ids:
          example: '[]'
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    patchPagesPageIdPageAccessUsersPageAccessUserIdComponents:
      description: Add components for page access user
      properties:
        component_ids:
          description: List of component codes to allow access to
          items:
            type: string
          type: array
      required:
      - component_ids
      type: object
    putPagesPageIdPageAccessUsersPageAccessUserIdComponents:
      description: Add components for page access user
      properties:
        component_ids:
          description: List of component codes to allow access to
          items:
            type: string
          type: array
      required:
      - component_ids
      type: object
    postPagesPageIdPageAccessUsersPageAccessUserIdComponents:
      description: Replace components for page access user
      properties:
        component_ids:
          description: List of component codes to allow access to
          items:
            type: string
          type: array
      required:
      - component_ids
      type: object
    deletePagesPageIdPageAccessUsersPageAccessUserIdComponents:
      description: Remove components for page access user
      properties:
        component_ids:
          description: List of components codes to remove.  If omitted, all components
            will be removed.
          items:
            type: string
          type: array
      type: object
    Component:
      description: Add page access groups to a component
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        page_id: page_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        group_id: group_id
        name: name
        showcase: true
        only_show_if_degraded: true
        automation_email: automation_email
        id: id
        position: 0
        group: true
        status: operational
        start_date: 2000-01-23
      properties:
        id:
          description: Identifier for component
          type: string
        page_id:
          description: Page identifier
          type: string
        group_id:
          description: Component Group identifier
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        group:
          description: Is this component a group
          type: boolean
        name:
          description: Display name for component
          type: string
        description:
          description: More detailed description for component
          type: string
        position:
          description: Order the component will appear on the page
          format: int32
          type: integer
        status:
          description: Status of component
          enum:
          - operational
          - under_maintenance
          - degraded_performance
          - partial_outage
          - major_outage
          - ""
          type: string
        showcase:
          description: Should this component be showcased
          type: boolean
        only_show_if_degraded:
          description: Requires a special feature flag to be enabled
          type: boolean
        automation_email:
          description: Requires a special feature flag to be enabled
          type: string
        start_date:
          description: The date this component started being used
          format: date
          type: string
      type: object
    patchPagesPageIdPageAccessUsersPageAccessUserIdMetrics:
      description: Add metrics for page access user
      properties:
        metric_ids:
          description: List of metrics to add
          items:
            type: string
          type: array
      required:
      - metric_ids
      type: object
    putPagesPageIdPageAccessUsersPageAccessUserIdMetrics:
      description: Add metrics for page access user
      properties:
        metric_ids:
          description: List of metrics to add
          items:
            type: string
          type: array
      required:
      - metric_ids
      type: object
    postPagesPageIdPageAccessUsersPageAccessUserIdMetrics:
      description: Replace metrics for page access user
      properties:
        metric_ids:
          description: List of metrics to add
          items:
            type: string
          type: array
      required:
      - metric_ids
      type: object
    deletePagesPageIdPageAccessUsersPageAccessUserIdMetrics:
      description: Delete metrics for page access user
      properties:
        metric_ids:
          description: List of metrics to remove
          items:
            type: string
          type: array
      type: object
    Metric:
      description: Create a metric for a metric provider
      example:
        reference_name: reference_name
        y_axis_hidden: true
        display: true
        most_recent_data_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        backfilled: true
        y_axis_max: 6.0274563
        suffix: suffix
        metrics_provider_id: metrics_provider_id
        decimal_places: 1
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        y_axis_min: 0.8008282
        tooltip_description: tooltip_description
        backfill_percentage: 5
        metric_identifier: metric_identifier
        last_fetched_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Metric identifier
          type: string
        metrics_provider_id:
          description: Metric Provider identifier
          type: string
        metric_identifier:
          description: Metric Display identifier used to look up the metric data from
            the provider
          type: string
        name:
          description: Name of metric
          type: string
        display:
          description: Should the metric be displayed
          type: boolean
        tooltip_description:
          type: string
        backfilled:
          type: boolean
        y_axis_min:
          format: float
          type: number
        y_axis_max:
          format: float
          type: number
        y_axis_hidden:
          description: Should the values on the y axis be hidden on render
          type: boolean
        suffix:
          description: Suffix to describe the units on the graph
          type: string
        decimal_places:
          format: int32
          type: integer
        most_recent_data_at:
          format: date-time
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        last_fetched_at:
          format: date-time
          type: string
        backfill_percentage:
          format: int32
          type: integer
        reference_name:
          type: string
      type: object
    PageAccessGroup:
      description: Remove a component from a page access group
      example:
        page_id: page_id
        external_identifier: external_identifier
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        metric_ids:
        - wyzy9k6g3v91
        - wyzy9k6g3v91
        created_at: 2000-01-23T04:56:07.000+00:00
        id: yk8z399hgfxm
        component_ids:
        - dg8fb9vf8jtr
        - dg8fb9vf8jtr
        page_access_user_ids:
        - w1cq8359wjkn
        - w1cq8359wjkn
      properties:
        id:
          description: Page Access Group Identifier
          example: yk8z399hgfxm
          type: string
        page_id:
          description: Page Identifier.
          type: string
        name:
          description: Name for this Group.
          type: string
        page_access_user_ids:
          items:
            example: w1cq8359wjkn
            type: string
          type: array
        external_identifier:
          description: Associates group with external group.
          type: string
        metric_ids:
          items:
            example: wyzy9k6g3v91
            type: string
          type: array
        component_ids:
          items:
            example: dg8fb9vf8jtr
            type: string
          type: array
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    postPagesPageIdPageAccessGroups:
      description: Create a page access group
      properties:
        page_access_group:
          $ref: '#/components/schemas/postPagesPageIdPageAccessGroups_page_access_group'
      type: object
    patchPagesPageIdPageAccessGroups:
      description: Update a page access group
      properties:
        page_access_group:
          $ref: '#/components/schemas/postPagesPageIdPageAccessGroups_page_access_group'
      type: object
    putPagesPageIdPageAccessGroups:
      description: Update a page access group
      properties:
        page_access_group:
          $ref: '#/components/schemas/postPagesPageIdPageAccessGroups_page_access_group'
      type: object
    patchPagesPageIdPageAccessGroupsPageAccessGroupIdComponents:
      description: Add components to page access group
      properties:
        component_ids:
          description: List of Component identifiers
          items:
            type: string
          type: array
      type: object
    putPagesPageIdPageAccessGroupsPageAccessGroupIdComponents:
      description: Add components to page access group
      properties:
        component_ids:
          description: List of Component identifiers
          items:
            type: string
          type: array
      type: object
    postPagesPageIdPageAccessGroupsPageAccessGroupIdComponents:
      description: Replace components for a page access group
      properties:
        component_ids:
          description: List of components codes to set on the page access group
          items:
            type: string
          type: array
      required:
      - component_ids
      type: object
    deletePagesPageIdPageAccessGroupsPageAccessGroupIdComponents:
      description: Delete components for a page access group
      properties:
        component_ids:
          items:
            type: string
          type: array
      type: object
    postPagesPageIdSubscribersResendConfirmation:
      description: Resend confirmations to a list of subscribers
      properties:
        subscribers:
          description: The array of subscriber codes to resend confirmations for,
            or "all" to resend confirmations to all subscribers. Only unconfirmed
            email subscribers will receive this notification.
          type: string
      required:
      - subscribers
      type: object
    postPagesPageIdSubscribersUnsubscribe:
      description: Unsubscribe a list of subscribers
      properties:
        subscribers:
          description: The array of subscriber codes to unsubscribe (limited to 100),
            or "all" to unsubscribe all subscribers if the number of subscribers is
            less than 100.
          type: string
        type:
          description: If this is present, only unsubscribe subscribers of this type.
          enum:
          - email
          - sms
          - slack
          - webhook
          - integration_partner
          type: string
        state:
          default: active
          description: If this is present, only unsubscribe subscribers in this state.
            Specify state "all" to unsubscribe subscribers in any states.
          enum:
          - active
          - unconfirmed
          - quarantined
          - all
          type: string
        skip_unsubscription_notification:
          description: If skip_unsubscription_notification is true, the subscribers
            do not receive any notifications when they are unsubscribed.
          type: boolean
      required:
      - subscribers
      type: object
    postPagesPageIdSubscribersReactivate:
      description: Reactivate a list of quarantined subscribers
      properties:
        subscribers:
          description: The array of quarantined subscriber codes to reactivate, or
            "all" to reactivate all quarantined subscribers.
          type: string
        type:
          description: If this is present, only reactivate subscribers of this type.
          enum:
          - email
          - sms
          - slack
          - webhook
          - integration_partner
          type: string
      required:
      - subscribers
      type: object
    SubscriberCountByTypeAndState:
      description: Get a histogram of subscribers by type and then state
      example:
        integration_partner:
          unconfirmed: 6
          total: 5
          active: 0
          quarantined: 1
        webhook:
          unconfirmed: 6
          total: 5
          active: 0
          quarantined: 1
        slack:
          unconfirmed: 6
          total: 5
          active: 0
          quarantined: 1
        sms:
          unconfirmed: 6
          total: 5
          active: 0
          quarantined: 1
        email:
          unconfirmed: 6
          total: 5
          active: 0
          quarantined: 1
      properties:
        email:
          $ref: '#/components/schemas/SubscriberCountByState'
        sms:
          $ref: '#/components/schemas/SubscriberCountByState'
        webhook:
          $ref: '#/components/schemas/SubscriberCountByState'
        integration_partner:
          $ref: '#/components/schemas/SubscriberCountByState'
        slack:
          $ref: '#/components/schemas/SubscriberCountByState'
      type: object
    SubscriberCountByState:
      example:
        unconfirmed: 6
        total: 5
        active: 0
        quarantined: 1
      properties:
        active:
          description: The number of active subscribers found by the query.
          format: int32
          type: integer
        unconfirmed:
          description: The number of unconfirmed subscribers found by the query.
          format: int32
          type: integer
        quarantined:
          description: The number of quarantined subscribers found by the query.
          format: int32
          type: integer
        total:
          description: The total number of subscribers found by the query.
          format: int32
          type: integer
      type: object
    SubscriberCountByType:
      description: Get a count of subscribers by type
      example:
        integration_partner: 5
        webhook: 1
        slack: 5
        sms: 6
        email: 0
      properties:
        email:
          description: The number of Email subscribers found by the query.
          format: int32
          type: integer
        sms:
          description: The number of Webhook subscribers found by the query.
          format: int32
          type: integer
        webhook:
          description: The number of SMS subscribers found by the query.
          format: int32
          type: integer
        integration_partner:
          description: The number of integration partners found by the query.
          format: int32
          type: integer
        slack:
          description: The number of Slack subscribers found by the query.
          format: int32
          type: integer
      type: object
    Subscriber:
      description: Get an incident subscriber
      example:
        obfuscated_channel_name: '#*******an'
        components: '["l1mr4jcmzgkr"]'
        display_phone_number: +1 (202) 555-0105
        quarantined_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        skip_confirmation_notification: true
        page_access_user_id: rfwh2j95244n
        mode: email
        endpoint: http://example.com/
        purge_at: 2000-01-23T04:56:07.000+00:00
        phone_country: US
        phone_number: 202-555-0105
        id: q3k6cm9phfws
        email: foo@example2.com
        workspace_name: Atlassian
      properties:
        id:
          description: Subscriber Identifier
          example: q3k6cm9phfws
          type: string
        skip_confirmation_notification:
          description: If this is true, do not notify the user with changes to their
            subscription.
          type: boolean
        mode:
          description: The communication mode of the subscriber.
          example: email
          type: string
        email:
          description: The email address to use to contact the subscriber. Used for
            Email and Webhook subscribers.
          example: foo@example2.com
          type: string
        endpoint:
          description: The URL where a webhook subscriber elects to receive updates.
          example: http://example.com/
          type: string
        phone_number:
          description: The phone number used to contact an SMS subscriber
          example: 202-555-0105
          type: string
        phone_country:
          description: The two-character country code representing the country of
            which the phone_number is a part.
          example: US
          type: string
        display_phone_number:
          description: A formatted version of the phone_number and phone_country pair,
            nicely formatted for display.
          example: +1 (202) 555-0105
          type: string
        obfuscated_channel_name:
          description: Obfuscated slack channel name
          example: '#*******an'
          type: string
        workspace_name:
          description: The workspace name of the slack subscriber.
          example: Atlassian
          type: string
        quarantined_at:
          description: The timestamp when the subscriber was quarantined due to an
            issue reaching them.
          format: date-time
          type: string
        purge_at:
          description: The timestamp when a quarantined subscriber will be purged
            (unsubscribed).
          format: date-time
          type: string
        components:
          description: The components for which the subscriber has elected to receive
            updates.
          example: '["l1mr4jcmzgkr"]'
          type: string
        page_access_user_id:
          description: The Page Access user this subscriber belongs to (only for audience-specific
            pages).
          example: rfwh2j95244n
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    postPagesPageIdSubscribers:
      description: Create a subscriber. Not applicable for Slack subscribers.
      properties:
        subscriber:
          $ref: '#/components/schemas/postPagesPageIdSubscribers_subscriber'
      type: object
    patchPagesPageIdSubscribers:
      description: Update a subscriber
      properties:
        component_ids:
          description: A list of component ids for which the subscriber should recieve
            updates for. Components must be an array with at least one element if
            it is passed at all. Each component must belong to the page indicated
            in the path. To set the subscriber to be subscribed to all components
            on the page, exclude this parameter.
          items:
            type: string
          type: array
      type: object
    postPagesPageIdIncidentTemplates:
      description: Create a template
      properties:
        template:
          $ref: '#/components/schemas/postPagesPageIdIncidentTemplates_template'
      type: object
    IncidentTemplate:
      description: Get a list of templates
      example:
        components:
        - created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          page_id: page_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          group_id: group_id
          name: name
          showcase: true
          only_show_if_degraded: true
          automation_email: automation_email
          id: id
          position: 0
          group: true
          status: operational
          start_date: 2000-01-23
        - created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          page_id: page_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          group_id: group_id
          name: name
          showcase: true
          only_show_if_degraded: true
          automation_email: automation_email
          id: id
          position: 0
          group: true
          status: operational
          start_date: 2000-01-23
        update_status: investigating
        group_id: xc0hhyyys2dw
        name: name
        id: gs825f4qmx9y
        title: title
        body: body
        should_tweet: true
        should_send_notifications: true
      properties:
        id:
          description: Incident Template Identifier
          example: gs825f4qmx9y
          type: string
        components:
          description: Affected components
          items:
            $ref: '#/components/schemas/Component'
          type: array
        name:
          description: Name of the template, as shown in the list on the "Templates"
            tab of the "Incidents" page
          type: string
        title:
          description: Title to be applied to the incident or maintenance when selecting
            this template
          type: string
        body:
          description: Body of the incident or maintenance update to be applied when
            selecting this template
          type: string
        group_id:
          description: Identifier of Template Group this template belongs to
          example: xc0hhyyys2dw
          type: string
        update_status:
          description: The status the incident or maintenance should transition to
            when selecting this template
          enum:
          - investigating
          - identified
          - monitoring
          - resolved
          - scheduled
          - in_progress
          - verifying
          - completed
          type: string
        should_tweet:
          description: Whether the "tweet update" checkbox should be selected when
            selecting this template
          type: boolean
        should_send_notifications:
          description: Whether the "deliver notifications" checkbox should be selected
            when selecting this template
          type: boolean
      type: object
    postPagesPageIdIncidents:
      description: Create an incident
      properties:
        incident:
          $ref: '#/components/schemas/postPagesPageIdIncidents_incident'
      type: object
    Incident:
      description: Get an incident
      example:
        scheduled_auto_in_progress: true
        monitoring_at: 2000-01-23T04:56:07.000+00:00
        components:
        - created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          page_id: page_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          group_id: group_id
          name: name
          showcase: true
          only_show_if_degraded: true
          automation_email: automation_email
          id: id
          position: 0
          group: true
          status: operational
          start_date: 2000-01-23
        - created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          page_id: page_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          group_id: group_id
          name: name
          showcase: true
          only_show_if_degraded: true
          automation_email: automation_email
          id: id
          position: 0
          group: true
          status: operational
          start_date: 2000-01-23
        metadata:
          jira:
            issue_id: value
        created_at: 2000-01-23T04:56:07.000+00:00
        scheduled_for: 2013-05-07T03:00:00.007Z
        postmortem_published_at: true
        page_id: page_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        auto_transition_to_maintenance_state: true
        id: p31zjtct2jer
        scheduled_auto_completed: true
        auto_transition_deliver_notifications_at_start: true
        shortlink: http://stspg.io/803310a12
        impact_override: minor
        scheduled_remind_prior: true
        impact: critical
        postmortem_body: |
          ##### Issue
          At approximately 17:02 UTC on 2013-04-21, our master database server unexpectedly went unresponsive to all network.
          A reboot of the machine at 17:05 UTC resulted in a failed mount of a corrupted EBS volume, and we made the decision
          at that time to fail over the slave database.

          ##### Resolution
          At 17:12 UTC, the slave database had been successfully promoted to master and the application recovered enough to
          accept web traffic again. A new slave database node was created and placed into the rotation to guard against future
          master failures. The promoted slave database performed slowly for the next couple of hours as the query cache began
          to warm up, and eventually settled into a reasonable performance profile around 20:00 UTC.

          ##### Future Mitigation Plans
          Over the past few months, we have been working on an overhaul to our data storage layer with a migration from a Postgres
          setup to a distributed, fault-tolerant, multi-region data layer using Riak. This initiative has been prioritized, and
          the migration will be performed in the coming weeks. We will notify our clients of the scheduled downtime via an
          incident on this status site, and via a blog post.
        postmortem_body_last_updated_at: 2000-01-23T04:56:07.000+00:00
        auto_transition_to_operational_state: true
        postmortem_notified_twitter: true
        postmortem_notified_subscribers: true
        resolved_at: 2000-01-23T04:56:07.000+00:00
        postmortem_ignored: true
        name: Data Layer Migration
        incident_updates:
        - tweet_id: tweet_id
          created_at: 2000-01-23T04:56:07.000+00:00
          body: body
          affected_components:
          - code: string
            name: string
            old_status: operational
            new_status: operational
          - code: string
            name: string
            old_status: operational
            new_status: operational
          deliver_notifications: true
          display_at: 2000-01-23T04:56:07.000+00:00
          incident_id: incident_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          wants_twitter_update: true
          custom_tweet: custom_tweet
          id: id
          twitter_updated_at: 2000-01-23T04:56:07.000+00:00
          status: investigating
        - tweet_id: tweet_id
          created_at: 2000-01-23T04:56:07.000+00:00
          body: body
          affected_components:
          - code: string
            name: string
            old_status: operational
            new_status: operational
          - code: string
            name: string
            old_status: operational
            new_status: operational
          deliver_notifications: true
          display_at: 2000-01-23T04:56:07.000+00:00
          incident_id: incident_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          wants_twitter_update: true
          custom_tweet: custom_tweet
          id: id
          twitter_updated_at: 2000-01-23T04:56:07.000+00:00
          status: investigating
        auto_transition_deliver_notifications_at_end: true
        scheduled_until: 2013-05-07T06:00:00.007Z
        scheduled_reminded_at: 2000-01-23T04:56:07.000+00:00
        status: scheduled
      properties:
        id:
          description: Incident Identifier
          example: p31zjtct2jer
          type: string
        components:
          description: Incident components
          items:
            $ref: '#/components/schemas/Component'
          type: array
        created_at:
          description: The timestamp when the incident was created at.
          format: date-time
          type: string
        impact:
          description: The impact of the incident.
          enum:
          - none
          - maintenance
          - minor
          - major
          - critical
          example: critical
          type: string
        impact_override:
          description: value to override calculated impact value
          enum:
          - none
          - maintenance
          - minor
          - major
          - critical
          example: minor
          type: string
        incident_updates:
          description: The incident updates for incident.
          items:
            $ref: '#/components/schemas/IncidentUpdate'
          type: array
        metadata:
          description: Metadata attached to the incident. Top level values must be
            objects.
          example:
            jira:
              issue_id: value
          type: Object
        monitoring_at:
          description: The timestamp when incident entered monitoring state.
          format: date-time
          type: string
        name:
          description: Incident Name. There is a maximum limit of 255 characters.
          example: Data Layer Migration
          type: string
        page_id:
          description: Incident Page Identifier
          type: string
        postmortem_body:
          description: Body of the Postmortem.
          example: |
            ##### Issue
            At approximately 17:02 UTC on 2013-04-21, our master database server unexpectedly went unresponsive to all network.
            A reboot of the machine at 17:05 UTC resulted in a failed mount of a corrupted EBS volume, and we made the decision
            at that time to fail over the slave database.

            ##### Resolution
            At 17:12 UTC, the slave database had been successfully promoted to master and the application recovered enough to
            accept web traffic again. A new slave database node was created and placed into the rotation to guard against future
            master failures. The promoted slave database performed slowly for the next couple of hours as the query cache began
            to warm up, and eventually settled into a reasonable performance profile around 20:00 UTC.

            ##### Future Mitigation Plans
            Over the past few months, we have been working on an overhaul to our data storage layer with a migration from a Postgres
            setup to a distributed, fault-tolerant, multi-region data layer using Riak. This initiative has been prioritized, and
            the migration will be performed in the coming weeks. We will notify our clients of the scheduled downtime via an
            incident on this status site, and via a blog post.
          type: string
        postmortem_body_last_updated_at:
          description: The timestamp when the incident postmortem body was last updated
            at.
          format: date-time
          type: string
        postmortem_ignored:
          description: Controls whether the incident will have postmortem.
          type: boolean
        postmortem_notified_subscribers:
          description: Indicates whether subscribers are already notificed about postmortem.
          type: boolean
        postmortem_notified_twitter:
          description: Controls whether to decide if notify postmortem on twitter.
          type: boolean
        postmortem_published_at:
          description: The timestamp when the postmortem was published.
          type: boolean
        resolved_at:
          description: The timestamp when incident was resolved.
          format: date-time
          type: string
        scheduled_auto_completed:
          description: Controls whether the incident is scheduled to automatically
            change to complete.
          type: boolean
        scheduled_auto_in_progress:
          description: Controls whether the incident is scheduled to automatically
            change to in progress.
          type: boolean
        scheduled_for:
          description: The timestamp the incident is scheduled for.
          example: 2013-05-07T03:00:00.007Z
          format: date-time
          type: string
        auto_transition_deliver_notifications_at_end:
          description: Controls whether send notification when scheduled maintenances
            auto transition to completed.
          type: boolean
        auto_transition_deliver_notifications_at_start:
          description: Controls whether send notification when scheduled maintenances
            auto transition to started.
          type: boolean
        auto_transition_to_maintenance_state:
          description: Controls whether change components status to under_maintenance
            once scheduled maintenance is in progress.
          type: boolean
        auto_transition_to_operational_state:
          description: Controls whether change components status to operational once
            scheduled maintenance completes.
          type: boolean
        scheduled_remind_prior:
          description: Controls whether to remind subscribers prior to scheduled incidents.
          type: boolean
        scheduled_reminded_at:
          description: The timestamp when the scheduled incident reminder was sent
            at.
          format: date-time
          type: string
        scheduled_until:
          description: The timestamp the incident is scheduled until.
          example: 2013-05-07T06:00:00.007Z
          format: date-time
          type: string
        shortlink:
          description: Incident Shortlink.
          example: http://stspg.io/803310a12
          type: string
        status:
          description: The incident status. For realtime incidents, valid values are
            investigating, identified, monitoring, and resolved. For scheduled incidents,
            valid values are scheduled, in_progress, verifying, and completed.
          enum:
          - investigating
          - identified
          - monitoring
          - resolved
          - scheduled
          - in_progress
          - verifying
          - completed
          example: scheduled
          type: string
        updated_at:
          description: The timestamp when the incident was updated at.
          format: date-time
          type: string
      type: object
    IncidentUpdate:
      description: Update a previous incident update
      example:
        tweet_id: tweet_id
        created_at: 2000-01-23T04:56:07.000+00:00
        body: body
        affected_components:
        - code: string
          name: string
          old_status: operational
          new_status: operational
        - code: string
          name: string
          old_status: operational
          new_status: operational
        deliver_notifications: true
        display_at: 2000-01-23T04:56:07.000+00:00
        incident_id: incident_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        wants_twitter_update: true
        custom_tweet: custom_tweet
        id: id
        twitter_updated_at: 2000-01-23T04:56:07.000+00:00
        status: investigating
      properties:
        id:
          description: Incident Update Identifier.
          type: string
        incident_id:
          description: Incident Identifier.
          type: string
        affected_components:
          description: Affected components associated with the incident update.
          items:
            example:
              code: string
              name: string
              old_status: operational
              new_status: operational
            type: object
          type: array
        body:
          description: Incident update body.
          type: string
        created_at:
          description: The timestamp when the incident update was created at.
          format: date-time
          type: string
        custom_tweet:
          description: An optional customized tweet message for incident postmortem.
          type: string
        deliver_notifications:
          description: Controls whether to delivery notifications.
          type: boolean
        display_at:
          description: Timestamp when incident update is happened.
          format: date-time
          type: string
        status:
          description: The incident status. For realtime incidents, valid values are
            investigating, identified, monitoring, and resolved. For scheduled incidents,
            valid values are scheduled, in_progress, verifying, and completed.
          enum:
          - investigating
          - identified
          - monitoring
          - resolved
          - scheduled
          - in_progress
          - verifying
          - completed
          type: string
        tweet_id:
          description: Tweet identifier associated to this incident update.
          type: string
        twitter_updated_at:
          description: The timestamp when twitter updated at.
          format: date-time
          type: string
        updated_at:
          description: The timestamp when the incident update is updated.
          format: date-time
          type: string
        wants_twitter_update:
          description: Controls whether to create twitter update.
          type: boolean
      type: object
    patchPagesPageIdIncidents:
      description: Update an incident
      properties:
        incident:
          $ref: '#/components/schemas/patchPagesPageIdIncidents_incident'
      type: object
    putPagesPageIdIncidents:
      description: Update an incident
      properties:
        incident:
          $ref: '#/components/schemas/patchPagesPageIdIncidents_incident'
      type: object
    patchPagesPageIdIncidentsIncidentIdIncidentUpdates:
      description: Update a previous incident update
      properties:
        incident_update:
          $ref: '#/components/schemas/patchPagesPageIdIncidentsIncidentIdIncidentUpdates_incident_update'
      type: object
    putPagesPageIdIncidentsIncidentIdIncidentUpdates:
      description: Update a previous incident update
      properties:
        incident_update:
          $ref: '#/components/schemas/patchPagesPageIdIncidentsIncidentIdIncidentUpdates_incident_update'
      type: object
    postPagesPageIdIncidentsIncidentIdSubscribers:
      description: Create an incident subscriber
      properties:
        subscriber:
          $ref: '#/components/schemas/postPagesPageIdIncidentsIncidentIdSubscribers_subscriber'
      type: object
    Postmortem:
      description: Revert Postmortem
      example:
        notify_subscribers: true
        body_updated_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        preview_key: preview_key
        body_draft_updated_at: 2000-01-23T04:56:07.000+00:00
        body_draft: body_draft
        notify_twitter: true
        created_at: 2000-01-23T04:56:07.000+00:00
        custom_tweet: custom_tweet
        body: body
        published_at: 2000-01-23T04:56:07.000+00:00
      properties:
        preview_key:
          description: Preview Key
          type: string
        body:
          description: Postmortem body
          type: string
        body_updated_at:
          format: date-time
          type: string
        body_draft:
          description: Body draft
          type: string
        body_draft_updated_at:
          format: date-time
          type: string
        published_at:
          format: date-time
          type: string
        notify_subscribers:
          description: Should email subscribers be notified.
          type: boolean
        notify_twitter:
          description: Should Twitter followers be notified.
          type: boolean
        custom_tweet:
          description: Custom tweet for Incident Postmortem
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    putPagesPageIdIncidentsIncidentIdPostmortem:
      description: Create Postmortem
      properties:
        postmortem:
          $ref: '#/components/schemas/putPagesPageIdIncidentsIncidentIdPostmortem_postmortem'
      type: object
    putPagesPageIdIncidentsIncidentIdPostmortemPublish:
      description: Publish Postmortem
      properties:
        postmortem:
          $ref: '#/components/schemas/putPagesPageIdIncidentsIncidentIdPostmortemPublish_postmortem'
      type: object
    postPagesPageIdComponents:
      description: Create a component
      properties:
        component:
          $ref: '#/components/schemas/postPagesPageIdComponents_component'
      type: object
    patchPagesPageIdComponents:
      description: Update a component
      properties:
        component:
          $ref: '#/components/schemas/postPagesPageIdComponents_component'
      type: object
    putPagesPageIdComponents:
      description: Update a component
      properties:
        component:
          $ref: '#/components/schemas/postPagesPageIdComponents_component'
      type: object
    ComponentUptime:
      description: Get uptime data for a component that has uptime showcase enabled
      example:
        range_end: 2000-01-23T04:56:07.000+00:00
        major_outage: 86400
        uptime_percentage: 96.67
        warnings: '["End date was adjusted to today. See range_end field in response
          for end date used."]'
        range_start: 2000-01-23T04:56:07.000+00:00
        partial_outage: 0
        name: name
        id: id
        related_events:
          id: id
      properties:
        range_start:
          description: Start date used for uptime calculation (see the warnings field
            in the response if this value does not match the start parameter you provided).
          format: date-time
          type: string
        range_end:
          description: End date used for uptime calculation (see the warnings field
            in the response if this value does not match the end parameter you provided).
          format: date-time
          type: string
        uptime_percentage:
          description: Uptime percentage for a component
          example: 96.67
          format: float
          type: number
        major_outage:
          description: Seconds of major outage
          example: 86400
          format: int32
          type: integer
        partial_outage:
          description: Seconds of partial outage
          example: 0
          format: int32
          type: integer
        warnings:
          description: Warning messages related to the uptime query that may occur
          example: '["End date was adjusted to today. See range_end field in response
            for end date used."]'
          type: string
        id:
          description: Component identifier
          type: string
        name:
          description: Component display name
          type: string
        related_events:
          $ref: '#/components/schemas/ComponentUptime_related_events'
      type: object
    postPagesPageIdComponentGroups:
      description: Create a component group
      properties:
        description:
          description: Description of the component group.
          type: string
        component_group:
          $ref: '#/components/schemas/postPagesPageIdComponentGroups_component_group'
      type: object
    GroupComponent:
      description: Get a component group
      example:
        page_id: page_id
        components: '["abc123","abc124"]'
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: API Components
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: j6r0t80d2psz
        position: position
      properties:
        id:
          description: Component Group Identifier
          example: j6r0t80d2psz
          type: string
        page_id:
          type: string
        name:
          example: API Components
          type: string
        description:
          type: string
        components:
          example: '["abc123","abc124"]'
          type: string
        position:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    patchPagesPageIdComponentGroups:
      description: Update a component group
      properties:
        description:
          description: Updated description of the component group.
          type: string
        component_group:
          $ref: '#/components/schemas/postPagesPageIdComponentGroups_component_group'
      type: object
    putPagesPageIdComponentGroups:
      description: Update a component group
      properties:
        description:
          description: Updated description of the component group.
          type: string
        component_group:
          $ref: '#/components/schemas/postPagesPageIdComponentGroups_component_group'
      type: object
    ComponentGroupUptime:
      description: Get uptime data for a component group that has uptime showcase
        enabled for at least one component.
      example:
        range_end: 2000-01-23T04:56:07.000+00:00
        major_outage: 86400
        uptime_percentage: 96.67
        warnings: '["End date was adjusted to today. See range_end field in response
          for end date used."]'
        range_start: 2000-01-23T04:56:07.000+00:00
        partial_outage: 0
        name: name
        id: id
        related_events:
          component_id: component_id
          incidents:
            id: id
      properties:
        range_start:
          description: Start date used for uptime calculation (see the warnings field
            in the response if this value does not match the start parameter you provided).
          format: date-time
          type: string
        range_end:
          description: End date used for uptime calculation (see the warnings field
            in the response if this value does not match the end parameter you provided).
          format: date-time
          type: string
        uptime_percentage:
          description: Uptime percentage for a component
          example: 96.67
          format: float
          type: number
        major_outage:
          description: Seconds of major outage
          example: 86400
          format: int32
          type: integer
        partial_outage:
          description: Seconds of partial outage
          example: 0
          format: int32
          type: integer
        warnings:
          description: Warning messages related to the uptime query that may occur
          example: '["End date was adjusted to today. See range_end field in response
            for end date used."]'
          type: string
        id:
          description: Component group identifier
          type: string
        name:
          description: Component group display name
          type: string
        related_events:
          $ref: '#/components/schemas/ComponentGroupUptime_related_events'
      type: object
    MetricAddResponse:
      description: Add data points to metrics
      example:
        metric_id:
        - value: 6.0274563
          timestamp: 0
        - value: 6.0274563
          timestamp: 0
      properties:
        metric_id:
          description: Metric identifier to add data to
          items:
            $ref: '#/components/schemas/MetricAddResponse_metric_id'
          type: array
      type: object
    postPagesPageIdMetricsData:
      description: Add data points to metrics
      properties:
        data:
          $ref: '#/components/schemas/MetricAddResponse'
      required:
      - data
      type: object
    patchPagesPageIdMetrics:
      description: Update a metric
      properties:
        metric:
          $ref: '#/components/schemas/patchPagesPageIdMetrics_metric'
      type: object
    putPagesPageIdMetrics:
      description: Update a metric
      properties:
        metric:
          $ref: '#/components/schemas/patchPagesPageIdMetrics_metric'
      type: object
    postPagesPageIdMetricsMetricIdData:
      description: Add data to a metric
      properties:
        data:
          $ref: '#/components/schemas/postPagesPageIdMetricsMetricIdData_data'
      required:
      - data
      type: object
    SingleMetricAddResponse:
      description: Add data to a metric
      example:
        data:
          value: 6.0274563
          timestamp: 0
      properties:
        data:
          $ref: '#/components/schemas/MetricAddResponse_metric_id'
      type: object
    MetricsProvider:
      description: Delete a metric provider
      example:
        page_id: 0
        metric_base_uri: metric_base_uri
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        disabled: true
        last_revalidated_at: 2000-01-23T04:56:07.000+00:00
        id: id
        type: type
      properties:
        id:
          description: Identifier for Metrics Provider
          type: string
        type:
          type: string
        disabled:
          type: boolean
        metric_base_uri:
          type: string
        last_revalidated_at:
          format: date-time
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        page_id:
          format: int32
          type: integer
      type: object
    postPagesPageIdMetricsProviders:
      description: Create a metric provider
      properties:
        metrics_provider:
          $ref: '#/components/schemas/postPagesPageIdMetricsProviders_metrics_provider'
      type: object
    patchPagesPageIdMetricsProviders:
      description: Update a metric provider
      properties:
        metrics_provider:
          $ref: '#/components/schemas/patchPagesPageIdMetricsProviders_metrics_provider'
      type: object
    putPagesPageIdMetricsProviders:
      description: Update a metric provider
      properties:
        metrics_provider:
          $ref: '#/components/schemas/patchPagesPageIdMetricsProviders_metrics_provider'
      type: object
    postPagesPageIdMetricsProvidersMetricsProviderIdMetrics:
      description: Create a metric for a metric provider
      properties:
        metric:
          $ref: '#/components/schemas/postPagesPageIdMetricsProvidersMetricsProviderIdMetrics_metric'
      type: object
    StatusEmbedConfig:
      description: Update status embed config settings
      example:
        page_id: page_id
        incident_background_color: incident_background_color
        maintenance_background_color: maintenance_background_color
        position: position
        incident_text_color: incident_text_color
        maintenance_text_color: maintenance_text_color
      properties:
        page_id:
          description: Page identifier
          type: string
        position:
          description: Corner where status embed iframe will appear on page
          type: string
        incident_background_color:
          description: Color of status embed iframe background when displaying incident
          type: string
        incident_text_color:
          description: Color of status embed iframe text when displaying incident
          type: string
        maintenance_background_color:
          description: Color of status embed iframe background when displaying maintenance
          type: string
        maintenance_text_color:
          description: Color of status embed iframe text when displaying maintenance
          type: string
      type: object
    patchPagesPageIdStatusEmbedConfig:
      description: Update status embed config settings
      properties:
        status_embed_config:
          $ref: '#/components/schemas/patchPagesPageIdStatusEmbedConfig_status_embed_config'
      type: object
    putPagesPageIdStatusEmbedConfig:
      description: Update status embed config settings
      properties:
        status_embed_config:
          $ref: '#/components/schemas/patchPagesPageIdStatusEmbedConfig_status_embed_config'
      type: object
    putOrganizationsOrganizationIdPermissions:
      description: |-
        Update a user's role permissions. Payload should contain a mapping of pages to a set of the desired roles,
                          if the page has Role Based Access Control. Otherwise, the pages should map to an empty hash.
                          User will lose access to any pages omitted from the payload.
      properties:
        pages:
          $ref: '#/components/schemas/putOrganizationsOrganizationIdPermissions_pages'
      type: object
    Permissions:
      description: Get a user's permissions
      example:
        data:
          pages:
            page_id: page_id
            page_configuration: true
            incident_manager: true
            maintenance_manager: true
          user_id: user_id
      properties:
        data:
          $ref: '#/components/schemas/Permissions_data'
      type: object
    User:
      description: Get a list of users
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        organization_id: organization_id
        last_name: last_name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        first_name: first_name
        email: email
      properties:
        id:
          description: User identifier
          type: string
        organization_id:
          description: Organization identifier
          type: string
        email:
          description: Email address for the team member
          type: string
        first_name:
          type: string
        last_name:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    postOrganizationsOrganizationIdUsers:
      description: Create a user
      properties:
        user:
          $ref: '#/components/schemas/postOrganizationsOrganizationIdUsers_user'
      required:
      - user
      type: object
    inline_object:
      properties:
        page_access_user_ids:
          description: List of page access users to add to component
          items:
            type: string
          type: array
      required:
      - page_access_user_ids
      type: object
    patchPages_page:
      properties:
        name:
          description: Name of your page to be displayed
          type: string
        domain:
          description: CNAME alias for your status page
          type: string
        subdomain:
          description: Subdomain at which to access your status page
          type: string
        url:
          description: Website of your page.  Clicking on your statuspage image will
            link here.
          type: string
        branding:
          description: The main template your statuspage will use
          enum:
          - basic
          - premium
          type: string
        css_body_background_color:
          description: CSS Color
          type: string
        css_font_color:
          description: CSS Color
          type: string
        css_light_font_color:
          description: CSS Color
          type: string
        css_greens:
          description: CSS Color
          type: string
        css_yellows:
          description: CSS Color
          type: string
        css_oranges:
          description: CSS Color
          type: string
        css_reds:
          description: CSS Color
          type: string
        css_blues:
          description: CSS Color
          type: string
        css_border_color:
          description: CSS Color
          type: string
        css_graph_color:
          description: CSS Color
          type: string
        css_link_color:
          description: CSS Color
          type: string
        css_no_data:
          description: CSS Color
          type: string
        hidden_from_search:
          description: Should your page hide itself from search engines
          type: boolean
        viewers_must_be_team_members:
          type: boolean
        allow_page_subscribers:
          description: Can your users subscribe to all notifications on the page
          type: boolean
        allow_incident_subscribers:
          description: Can your users subscribe to notifications for a single incident
          type: boolean
        allow_email_subscribers:
          description: Can your users choose to receive notifications via email
          type: boolean
        allow_sms_subscribers:
          description: Can your users choose to receive notifications via SMS
          type: boolean
        allow_rss_atom_feeds:
          description: Can your users choose to access incident feeds via RSS/Atom
            (not functional on Audience-Specific pages)
          type: boolean
        allow_webhook_subscribers:
          description: Can your users choose to receive notifications via Webhooks
          type: boolean
        notifications_from_email:
          description: Allows you to customize the email address your page notifications
            come from
          type: string
        time_zone:
          description: Timezone configured for your page
          type: string
        notifications_email_footer:
          description: Allows you to customize the footer appearing on your notification
            emails.  Accepts Markdown for formatting
          type: string
      type: object
    postPagesPageIdPageAccessUsers_page_access_user:
      properties:
        external_login:
          description: IDP login user id. Key is typically "uid".
          type: string
        email:
          type: string
        page_access_group_ids:
          items:
            type: string
          type: array
        subscribe_to_components:
          type: boolean
      type: object
    postPagesPageIdPageAccessGroups_page_access_group:
      properties:
        name:
          description: Name for this Group.
          type: string
        external_identifier:
          description: Associates group with external group.
          type: string
        component_ids:
          items:
            type: string
          type: array
        metric_ids:
          items:
            type: string
          type: array
        page_access_user_ids:
          items:
            type: string
          type: array
      type: object
    postPagesPageIdSubscribers_subscriber:
      properties:
        email:
          description: The email address for creating Email and Webhook subscribers.
          type: string
        endpoint:
          description: The endpoint URI for creating Webhook subscribers.
          type: string
        phone_country:
          description: The two-character country where the phone number is located
            to use for the new SMS subscriber.
          type: string
        phone_number:
          description: The phone number (as you would dial from the phone_country)
            to use for the new SMS subscriber.
          type: string
        skip_confirmation_notification:
          description: If skip_confirmation_notification is true, the subscriber does
            not receive any notifications when their subscription changes.  Email
            subscribers will be automatically opted in. This option is only available
            for paid pages. This option has no effect for trial customers.
          type: boolean
        page_access_user:
          description: The code of the page access user to which the subscriber belongs.
          type: string
        component_ids:
          description: A list of component ids for which the subscriber should recieve
            updates for. Components must be an array with at least one element if
            it is passed at all. Each component must belong to the page indicated
            in the path.
          items:
            type: string
          type: array
      type: object
    postPagesPageIdIncidentTemplates_template:
      properties:
        name:
          description: Name of the template, as shown in the list on the "Templates"
            tab of the "Incidents" page
          type: string
        title:
          description: Title to be applied to the incident or maintenance when selecting
            this template
          type: string
        body:
          description: The initial message, created as the first incident or maintenance
            update.
          type: string
        group_id:
          description: Identifier of Template Group this template belongs to
          type: string
        update_status:
          description: The status the incident or maintenance should transition to
            when selecting this template
          enum:
          - investigating
          - identified
          - monitoring
          - resolved
          - scheduled
          - in_progress
          - verifying
          - completed
          type: string
        should_tweet:
          description: Whether the "tweet update" checkbox should be selected when
            selecting this template
          type: boolean
        should_send_notifications:
          description: Whether the "deliver notifications" checkbox should be selected
            when selecting this template
          type: boolean
        component_ids:
          description: List of component_ids affected by this incident
          items:
            default: t0s5rgf538zf
            type: string
          type: array
      required:
      - body
      - name
      - title
      type: object
    postPagesPageIdIncidents_incident_components:
      description: Map of status changes to apply to affected components
      properties:
        component_id:
          description: Map of status changes to apply to affected components
          enum:
          - operational
          - under_maintenance
          - degraded_performance
          - partial_outage
          - major_outage
          - ""
          type: string
      type: object
    postPagesPageIdIncidents_incident:
      properties:
        name:
          description: Incident Name. There is a maximum limit of 255 characters.
          type: string
        status:
          description: The incident status. For realtime incidents, valid values are
            investigating, identified, monitoring, and resolved. For scheduled incidents,
            valid values are scheduled, in_progress, verifying, and completed.
          enum:
          - investigating
          - identified
          - monitoring
          - resolved
          - scheduled
          - in_progress
          - verifying
          - completed
          type: string
        impact_override:
          description: value to override calculated impact value
          enum:
          - none
          - maintenance
          - minor
          - major
          - critical
          type: string
        scheduled_for:
          default: 2013-05-07T03:00:00.007Z
          description: The timestamp the incident is scheduled for.
          format: date-time
          type: string
        scheduled_until:
          default: 2013-05-07T06:00:00.007Z
          description: The timestamp the incident is scheduled until.
          format: date-time
          type: string
        scheduled_remind_prior:
          description: Controls whether to remind subscribers prior to scheduled incidents.
          type: boolean
        auto_transition_to_maintenance_state:
          description: Controls whether change components status to under_maintenance
            once scheduled maintenance is in progress.
          type: boolean
        auto_transition_to_operational_state:
          description: Controls whether change components status to operational once
            scheduled maintenance completes.
          type: boolean
        scheduled_auto_in_progress:
          description: Controls whether the incident is scheduled to automatically
            change to in progress.
          type: boolean
        scheduled_auto_completed:
          description: Controls whether the incident is scheduled to automatically
            change to complete.
          type: boolean
        auto_transition_deliver_notifications_at_start:
          description: Controls whether send notification when scheduled maintenances
            auto transition to started.
          type: boolean
        auto_transition_deliver_notifications_at_end:
          description: Controls whether send notification when scheduled maintenances
            auto transition to completed.
          type: boolean
        metadata:
          description: Attach a json object to the incident. All top-level values
            in the object must also be objects.
          type: object
        deliver_notifications:
          default: true
          description: Deliver notifications to subscribers if this is true. If this
            is false, create an incident without notifying customers.
          type: boolean
        auto_tweet_at_beginning:
          description: Controls whether tweet automatically when scheduled maintenance
            starts.
          type: boolean
        auto_tweet_on_completion:
          description: Controls whether tweet automatically when scheduled maintenance
            completes.
          type: boolean
        auto_tweet_on_creation:
          description: Controls whether tweet automatically when scheduled maintenance
            is created.
          type: boolean
        auto_tweet_one_hour_before:
          description: Controls whether tweet automatically one hour before scheduled
            maintenance starts.
          type: boolean
        backfill_date:
          description: TimeStamp when incident was backfilled.
          type: string
        backfilled:
          description: Controls whether incident is backfilled. If true, components
            cannot be specified.
          type: boolean
        body:
          description: The initial message, created as the first incident update.
            There is a maximum limit of 25000 characters
          type: string
        components:
          $ref: '#/components/schemas/postPagesPageIdIncidents_incident_components'
        component_ids:
          description: List of component_ids affected by this incident
          items:
            default: 0frwxtbsbr91
            type: string
          type: array
        scheduled_auto_transition:
          description: Same as :scheduled_auto_transition_in_progress. Controls whether
            the incident is scheduled to automatically change to in progress.
          type: boolean
      required:
      - name
      type: object
    patchPagesPageIdIncidents_incident:
      properties:
        name:
          description: Incident Name. There is a maximum limit of 255 characters.
          type: string
        status:
          description: The incident status. For realtime incidents, valid values are
            investigating, identified, monitoring, and resolved. For scheduled incidents,
            valid values are scheduled, in_progress, verifying, and completed.
          enum:
          - investigating
          - identified
          - monitoring
          - resolved
          - scheduled
          - in_progress
          - verifying
          - completed
          type: string
        impact_override:
          description: value to override calculated impact value
          enum:
          - none
          - maintenance
          - minor
          - major
          - critical
          type: string
        scheduled_for:
          description: The timestamp the incident is scheduled for.
          format: date-time
          type: string
        scheduled_until:
          description: The timestamp the incident is scheduled until.
          format: date-time
          type: string
        scheduled_remind_prior:
          description: Controls whether to remind subscribers prior to scheduled incidents.
          type: boolean
        auto_transition_to_maintenance_state:
          description: Controls whether change components status to under_maintenance
            once scheduled maintenance is in progress.
          type: boolean
        auto_transition_to_operational_state:
          description: Controls whether change components status to operational once
            scheduled maintenance completes.
          type: boolean
        scheduled_auto_in_progress:
          description: Controls whether the incident is scheduled to automatically
            change to in progress.
          type: boolean
        scheduled_auto_completed:
          description: Controls whether the incident is scheduled to automatically
            change to complete.
          type: boolean
        auto_transition_deliver_notifications_at_start:
          description: Controls whether send notification when scheduled maintenances
            auto transition to started.
          type: boolean
        auto_transition_deliver_notifications_at_end:
          description: Controls whether send notification when scheduled maintenances
            auto transition to completed.
          type: boolean
        metadata:
          description: Attach a json object to the incident. All top-level values
            in the object must also be objects.
          type: object
        deliver_notifications:
          default: true
          description: Deliver notifications to subscribers if this is true. If this
            is false, create an incident without notifying customers.
          type: boolean
        auto_tweet_at_beginning:
          description: Controls whether tweet automatically when scheduled maintenance
            starts.
          type: boolean
        auto_tweet_on_completion:
          description: Controls whether tweet automatically when scheduled maintenance
            completes.
          type: boolean
        auto_tweet_on_creation:
          description: Controls whether tweet automatically when scheduled maintenance
            is created.
          type: boolean
        auto_tweet_one_hour_before:
          description: Controls whether tweet automatically one hour before scheduled
            maintenance starts.
          type: boolean
        backfill_date:
          description: TimeStamp when incident was backfilled.
          type: string
        backfilled:
          description: Controls whether incident is backfilled. If true, components
            cannot be specified.
          type: boolean
        body:
          description: The initial message, created as the first incident update.
            There is a maximum limit of 25000 characters
          type: string
        components:
          $ref: '#/components/schemas/postPagesPageIdIncidents_incident_components'
        component_ids:
          description: List of component_ids affected by this incident
          items:
            default: xnkj99tp4jzc
            type: string
          type: array
        scheduled_auto_transition:
          description: Same as :scheduled_auto_transition_in_progress. Controls whether
            the incident is scheduled to automatically change to in progress.
          type: boolean
      type: object
    patchPagesPageIdIncidentsIncidentIdIncidentUpdates_incident_update:
      properties:
        wants_twitter_update:
          description: Controls whether to create twitter update.
          type: boolean
        body:
          description: Incident update body.
          type: string
        display_at:
          description: Timestamp when incident update is happened.
          format: date-time
          type: string
        deliver_notifications:
          description: Controls whether to delivery notifications.
          type: boolean
      type: object
    postPagesPageIdIncidentsIncidentIdSubscribers_subscriber:
      properties:
        email:
          description: The email address for creating Email subscribers.
          type: string
        phone_country:
          description: The two-character country where the phone number is located
            to use for the new SMS subscriber.
          type: string
        phone_number:
          description: The phone number (as you would dial from the phone_country)
            to use for the new SMS subscriber.
          type: string
        skip_confirmation_notification:
          description: If skip_confirmation_notification is true, the subscriber does
            not receive any notifications when their subscription changes. Email subscribers
            will be automatically opted in. This option is only available for paid
            pages. This option has no effect for trial customers.
          type: boolean
      type: object
    putPagesPageIdIncidentsIncidentIdPostmortem_postmortem:
      properties:
        body_draft:
          description: Body of Postmortem to create.
          type: string
      required:
      - body_draft
      type: object
    putPagesPageIdIncidentsIncidentIdPostmortemPublish_postmortem:
      properties:
        notify_twitter:
          description: Whether to notify Twitter followers
          type: boolean
        notify_subscribers:
          description: Whether to notify e-mail subscribers
          type: boolean
        custom_tweet:
          description: Custom postmortem tweet to publish
          type: string
      type: object
    postPagesPageIdComponents_component:
      properties:
        description:
          description: More detailed description for component
          type: string
        status:
          description: Status of component
          enum:
          - operational
          - under_maintenance
          - degraded_performance
          - partial_outage
          - major_outage
          - ""
          type: string
        name:
          description: Display name for component
          type: string
        only_show_if_degraded:
          description: Requires a special feature flag to be enabled
          type: boolean
        group_id:
          description: Component Group identifier
          type: string
        showcase:
          description: Should this component be showcased
          type: boolean
        start_date:
          description: The date this component started being used
          format: date
          type: string
      type: object
    ComponentUptime_related_events:
      description: Related incidents
      example:
        id: id
      properties:
        id:
          description: Incident identifier
          type: string
      type: object
    postPagesPageIdComponentGroups_component_group:
      properties:
        components:
          items:
            type: string
          type: array
        name:
          type: string
      required:
      - components
      - name
      type: object
    ComponentGroupUptime_related_events:
      description: Related incidents by component
      example:
        component_id: component_id
        incidents:
          id: id
      properties:
        component_id:
          description: Component identifier
          type: string
        incidents:
          $ref: '#/components/schemas/ComponentUptime_related_events'
      type: object
    MetricAddResponse_metric_id:
      example:
        value: 6.0274563
        timestamp: 0
      properties:
        timestamp:
          format: int32
          type: integer
        value:
          format: float
          type: number
      type: object
    patchPagesPageIdMetrics_metric:
      properties:
        name:
          description: Name of metric
          type: string
        metric_identifier:
          description: Metric Display identifier used to look up the metric data from
            the provider
          type: string
      type: object
    postPagesPageIdMetricsMetricIdData_data:
      properties:
        timestamp:
          description: Time to store the metric against
          format: int32
          type: integer
        value:
          format: float
          type: number
      type: object
    postPagesPageIdMetricsProviders_metrics_provider:
      properties:
        email:
          description: Required by the Librato metrics provider.
          type: string
        password:
          type: string
        api_key:
          description: Required by the Datadog and NewRelic type metrics providers.
          type: string
        api_token:
          description: Required by the Librato, Datadog and Pingdom type metrics providers.
          type: string
        application_key:
          description: Required by the Pingdom-type metrics provider.
          type: string
        type:
          description: One of "Pingdom", "NewRelic", "Librato", "Datadog", or "Self"
          type: string
        metric_base_uri:
          description: Required by the Datadog and NewRelic type metrics providers.
          type: string
      type: object
    patchPagesPageIdMetricsProviders_metrics_provider:
      properties:
        type:
          type: string
        metric_base_uri:
          type: string
      type: object
    postPagesPageIdMetricsProvidersMetricsProviderIdMetrics_metric:
      properties:
        name:
          description: Name of metric
          type: string
        metric_identifier:
          description: The identifier used to look up the metric data from the provider
          type: string
        transform:
          description: 'The transform to apply to metric before pulling into Statuspage.
            One of: "average", "count", "max", "min", or "sum"'
          type: string
        suffix:
          description: Suffix to describe the units on the graph
          type: string
        y_axis_min:
          description: The lower bound of the y axis
          format: int32
          type: integer
        y_axis_max:
          description: The upper bound of the y axis
          format: int32
          type: integer
        y_axis_hidden:
          description: Should the values on the y axis be hidden on render
          type: boolean
        display:
          description: Should the metric be displayed
          type: boolean
        decimal_places:
          description: How many decimal places to render on the graph
          format: int32
          type: integer
        tooltip_description:
          type: string
      type: object
    patchPagesPageIdStatusEmbedConfig_status_embed_config:
      properties:
        position:
          description: Corner where status embed iframe will appear on page
          type: string
        incident_background_color:
          description: Color of status embed iframe background when displaying incident
          type: string
        incident_text_color:
          description: Color of status embed iframe text when displaying incident
          type: string
        maintenance_background_color:
          description: Color of status embed iframe background when displaying maintenance
          type: string
        maintenance_text_color:
          description: Color of status embed iframe text when displaying maintenance
          type: string
      type: object
    putOrganizationsOrganizationIdPermissions_pages_page_id:
      properties:
        page_configuration:
          description: Whether or not user should have page configuration role. This
            field will only be present for pages with Role Based Access Control.
          type: boolean
        incident_manager:
          description: Whether or not user should have incident manager role. This
            field will only be present for pages with Role Based Access Control.
          type: boolean
        maintenance_manager:
          description: Whether or not user should have maintenance manager role. This
            field will only be present for pages with Role Based Access Control.
          type: boolean
      type: object
    putOrganizationsOrganizationIdPermissions_pages:
      properties:
        page_id:
          $ref: '#/components/schemas/putOrganizationsOrganizationIdPermissions_pages_page_id'
      type: object
    Permissions_data_pages:
      description: Pages accessible by the user.
      example:
        page_id: page_id
        page_configuration: true
        incident_manager: true
        maintenance_manager: true
      properties:
        page_id:
          description: Page identifier
          type: string
        page_configuration:
          description: User has page configuration role. This field will only be present
            if the organization has Role Based Access Control.
          type: boolean
        incident_manager:
          description: User has incident manager role. This field will only be present
            if the organization has Role Based Access Control.
          type: boolean
        maintenance_manager:
          description: User has maintenance manager role. This field will only be
            present if the organization has Role Based Access Control.
          type: boolean
      type: object
    Permissions_data:
      example:
        pages:
          page_id: page_id
          page_configuration: true
          incident_manager: true
          maintenance_manager: true
        user_id: user_id
      properties:
        user_id:
          description: User identifier
          type: string
        pages:
          $ref: '#/components/schemas/Permissions_data_pages'
      type: object
    postOrganizationsOrganizationIdUsers_user:
      properties:
        email:
          description: Email address for the team member
          type: string
        password:
          description: Password the team member uses to access the site
          type: string
        first_name:
          type: string
        last_name:
          type: string
      type: object
  securitySchemes:
    api_key:
      description: |
        #### Obtaining your API Key

        Authentication is done via an API token provided in the Statuspage management interface.

          1. Log in to your account at https://manage.statuspage.io/login.
          2. Click on your avatar in the bottom left of your screen to access the user menu.
          3. Click **API info**.

        ### Passing your API key in an authorization header

        The following example authenticates you with the Statuspage API.  Along with the Page ID
        listed on the API page, we can fetch your page profile.

            curl -H "Authorization: OAuth 89a229ce1a8dbcf9ff30430fbe35eb4c0426574bca932061892cefd2138aa4b1" \
              https://api.statuspage.io/v1/pages/gytm4qzbx9t6.json

        ### Passing your API key in a query param

            curl "https://api.statuspage.io/v1/pages/gytm4qzbx9t6.json?api_key=89a229ce1a8dbcf9ff30430fbe35eb4c0426574bca932061892cefd2138aa4b1"
      in: header
      name: Authorization
      type: apiKey
