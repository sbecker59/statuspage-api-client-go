/*
Statuspage API

# Code of Conduct Please don't abuse the API, and please report all feature requests and issues to https://support.atlassian.com/contact  # Rate Limiting Each API token is limited to 1 request / second as measured on a 60 second rolling window. To get this limit increased, please contact us at https://support.atlassian.com/contact  Error codes 420 or 429 indicate that you have exceeded the rate limit and the request has been rejected.  # Basics  ## HTTPS It's required  ## URL Prefix In order to maintain version integrity into the future, the API is versioned. All calls currently begin with the following prefix:    https://api.statuspage.io/v1/  ## RESTful Interface Wherever possible, the API seeks to implement repeatable patterns with logical, representative URLs and descriptive HTTP verbs. Below are some examples and conventions you will see throughout the documentation.  * Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json * Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json * GET will retrieve information about a collection/element * POST will create an element in a collection * PATCH will update a single element * PUT will replace a single element in a collection (rarely used) * DELETE will destroy a single element  ## Sending Data Information can be sent in the body as form urlencoded or JSON, but make sure the Content-Type header matches the body structure or the server gremlins will be angry.  All examples are provided in JSON format, however they can easily be converted to form encoding if required.  Some examples of how to convert things are below:      // JSON     {       \"incident\": {         \"name\": \"test incident\",         \"components\": [\"8kbf7d35c070\", \"vtnh60py4yd7\"]       }     }      // Form Encoded (using curl as an example):     curl -X POST https://api.statuspage.io/v1/example \\       -d \"incident[name]=test incident\" \\       -d \"incident[components][]=8kbf7d35c070\" \\       -d \"incident[components][]=vtnh60py4yd7\"  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostPagesPageIdComponentsComponent struct for PostPagesPageIdComponentsComponent
type PostPagesPageIdComponentsComponent struct {
	// More detailed description for component
	Description *string `json:"description,omitempty"`
	// Status of component
	Status *string `json:"status,omitempty"`
	// Display name for component
	Name *string `json:"name,omitempty"`
	// Requires a special feature flag to be enabled
	OnlyShowIfDegraded *bool `json:"only_show_if_degraded,omitempty"`
	// Component Group identifier
	GroupId *string `json:"group_id,omitempty"`
	// Should this component be showcased
	Showcase *bool `json:"showcase,omitempty"`
	// The date this component started being used
	StartDate *string `json:"start_date,omitempty"`
}

// NewPostPagesPageIdComponentsComponent instantiates a new PostPagesPageIdComponentsComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostPagesPageIdComponentsComponent() *PostPagesPageIdComponentsComponent {
	this := PostPagesPageIdComponentsComponent{}
	return &this
}

// NewPostPagesPageIdComponentsComponentWithDefaults instantiates a new PostPagesPageIdComponentsComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostPagesPageIdComponentsComponentWithDefaults() *PostPagesPageIdComponentsComponent {
	this := PostPagesPageIdComponentsComponent{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PostPagesPageIdComponentsComponent) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPagesPageIdComponentsComponent) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PostPagesPageIdComponentsComponent) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PostPagesPageIdComponentsComponent) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PostPagesPageIdComponentsComponent) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPagesPageIdComponentsComponent) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PostPagesPageIdComponentsComponent) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PostPagesPageIdComponentsComponent) SetStatus(v string) {
	o.Status = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PostPagesPageIdComponentsComponent) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPagesPageIdComponentsComponent) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PostPagesPageIdComponentsComponent) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PostPagesPageIdComponentsComponent) SetName(v string) {
	o.Name = &v
}

// GetOnlyShowIfDegraded returns the OnlyShowIfDegraded field value if set, zero value otherwise.
func (o *PostPagesPageIdComponentsComponent) GetOnlyShowIfDegraded() bool {
	if o == nil || o.OnlyShowIfDegraded == nil {
		var ret bool
		return ret
	}
	return *o.OnlyShowIfDegraded
}

// GetOnlyShowIfDegradedOk returns a tuple with the OnlyShowIfDegraded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPagesPageIdComponentsComponent) GetOnlyShowIfDegradedOk() (*bool, bool) {
	if o == nil || o.OnlyShowIfDegraded == nil {
		return nil, false
	}
	return o.OnlyShowIfDegraded, true
}

// HasOnlyShowIfDegraded returns a boolean if a field has been set.
func (o *PostPagesPageIdComponentsComponent) HasOnlyShowIfDegraded() bool {
	if o != nil && o.OnlyShowIfDegraded != nil {
		return true
	}

	return false
}

// SetOnlyShowIfDegraded gets a reference to the given bool and assigns it to the OnlyShowIfDegraded field.
func (o *PostPagesPageIdComponentsComponent) SetOnlyShowIfDegraded(v bool) {
	o.OnlyShowIfDegraded = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *PostPagesPageIdComponentsComponent) GetGroupId() string {
	if o == nil || o.GroupId == nil {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPagesPageIdComponentsComponent) GetGroupIdOk() (*string, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *PostPagesPageIdComponentsComponent) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *PostPagesPageIdComponentsComponent) SetGroupId(v string) {
	o.GroupId = &v
}

// GetShowcase returns the Showcase field value if set, zero value otherwise.
func (o *PostPagesPageIdComponentsComponent) GetShowcase() bool {
	if o == nil || o.Showcase == nil {
		var ret bool
		return ret
	}
	return *o.Showcase
}

// GetShowcaseOk returns a tuple with the Showcase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPagesPageIdComponentsComponent) GetShowcaseOk() (*bool, bool) {
	if o == nil || o.Showcase == nil {
		return nil, false
	}
	return o.Showcase, true
}

// HasShowcase returns a boolean if a field has been set.
func (o *PostPagesPageIdComponentsComponent) HasShowcase() bool {
	if o != nil && o.Showcase != nil {
		return true
	}

	return false
}

// SetShowcase gets a reference to the given bool and assigns it to the Showcase field.
func (o *PostPagesPageIdComponentsComponent) SetShowcase(v bool) {
	o.Showcase = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *PostPagesPageIdComponentsComponent) GetStartDate() string {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPagesPageIdComponentsComponent) GetStartDateOk() (*string, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *PostPagesPageIdComponentsComponent) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *PostPagesPageIdComponentsComponent) SetStartDate(v string) {
	o.StartDate = &v
}

func (o PostPagesPageIdComponentsComponent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OnlyShowIfDegraded != nil {
		toSerialize["only_show_if_degraded"] = o.OnlyShowIfDegraded
	}
	if o.GroupId != nil {
		toSerialize["group_id"] = o.GroupId
	}
	if o.Showcase != nil {
		toSerialize["showcase"] = o.Showcase
	}
	if o.StartDate != nil {
		toSerialize["start_date"] = o.StartDate
	}
	return json.Marshal(toSerialize)
}

type NullablePostPagesPageIdComponentsComponent struct {
	value *PostPagesPageIdComponentsComponent
	isSet bool
}

func (v NullablePostPagesPageIdComponentsComponent) Get() *PostPagesPageIdComponentsComponent {
	return v.value
}

func (v *NullablePostPagesPageIdComponentsComponent) Set(val *PostPagesPageIdComponentsComponent) {
	v.value = val
	v.isSet = true
}

func (v NullablePostPagesPageIdComponentsComponent) IsSet() bool {
	return v.isSet
}

func (v *NullablePostPagesPageIdComponentsComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostPagesPageIdComponentsComponent(val *PostPagesPageIdComponentsComponent) *NullablePostPagesPageIdComponentsComponent {
	return &NullablePostPagesPageIdComponentsComponent{value: val, isSet: true}
}

func (v NullablePostPagesPageIdComponentsComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostPagesPageIdComponentsComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


