/*
Statuspage API

# Code of Conduct Please don't abuse the API, and please report all feature requests and issues to https://support.atlassian.com/contact  # Rate Limiting Each API token is limited to 1 request / second as measured on a 60 second rolling window. To get this limit increased, please contact us at https://support.atlassian.com/contact  Error codes 420 or 429 indicate that you have exceeded the rate limit and the request has been rejected.  # Basics  ## HTTPS It's required  ## URL Prefix In order to maintain version integrity into the future, the API is versioned. All calls currently begin with the following prefix:    https://api.statuspage.io/v1/  ## RESTful Interface Wherever possible, the API seeks to implement repeatable patterns with logical, representative URLs and descriptive HTTP verbs. Below are some examples and conventions you will see throughout the documentation.  * Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json * Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json * GET will retrieve information about a collection/element * POST will create an element in a collection * PATCH will update a single element * PUT will replace a single element in a collection (rarely used) * DELETE will destroy a single element  ## Sending Data Information can be sent in the body as form urlencoded or JSON, but make sure the Content-Type header matches the body structure or the server gremlins will be angry.  All examples are provided in JSON format, however they can easily be converted to form encoding if required.  Some examples of how to convert things are below:      // JSON     {       \"incident\": {         \"name\": \"test incident\",         \"components\": [\"8kbf7d35c070\", \"vtnh60py4yd7\"]       }     }      // Form Encoded (using curl as an example):     curl -X POST https://api.statuspage.io/v1/example \\       -d \"incident[name]=test incident\" \\       -d \"incident[components][]=8kbf7d35c070\" \\       -d \"incident[components][]=vtnh60py4yd7\"  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Postmortem Revert Postmortem
type Postmortem struct {
	// Preview Key
	PreviewKey *string `json:"preview_key,omitempty"`
	// Postmortem body
	Body *string `json:"body,omitempty"`
	BodyUpdatedAt *time.Time `json:"body_updated_at,omitempty"`
	// Body draft
	BodyDraft *string `json:"body_draft,omitempty"`
	BodyDraftUpdatedAt *time.Time `json:"body_draft_updated_at,omitempty"`
	PublishedAt *time.Time `json:"published_at,omitempty"`
	// Should email subscribers be notified.
	NotifySubscribers *bool `json:"notify_subscribers,omitempty"`
	// Should Twitter followers be notified.
	NotifyTwitter *bool `json:"notify_twitter,omitempty"`
	// Custom tweet for Incident Postmortem
	CustomTweet *string `json:"custom_tweet,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewPostmortem instantiates a new Postmortem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostmortem() *Postmortem {
	this := Postmortem{}
	return &this
}

// NewPostmortemWithDefaults instantiates a new Postmortem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostmortemWithDefaults() *Postmortem {
	this := Postmortem{}
	return &this
}

// GetPreviewKey returns the PreviewKey field value if set, zero value otherwise.
func (o *Postmortem) GetPreviewKey() string {
	if o == nil || o.PreviewKey == nil {
		var ret string
		return ret
	}
	return *o.PreviewKey
}

// GetPreviewKeyOk returns a tuple with the PreviewKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Postmortem) GetPreviewKeyOk() (*string, bool) {
	if o == nil || o.PreviewKey == nil {
		return nil, false
	}
	return o.PreviewKey, true
}

// HasPreviewKey returns a boolean if a field has been set.
func (o *Postmortem) HasPreviewKey() bool {
	if o != nil && o.PreviewKey != nil {
		return true
	}

	return false
}

// SetPreviewKey gets a reference to the given string and assigns it to the PreviewKey field.
func (o *Postmortem) SetPreviewKey(v string) {
	o.PreviewKey = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *Postmortem) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Postmortem) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *Postmortem) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *Postmortem) SetBody(v string) {
	o.Body = &v
}

// GetBodyUpdatedAt returns the BodyUpdatedAt field value if set, zero value otherwise.
func (o *Postmortem) GetBodyUpdatedAt() time.Time {
	if o == nil || o.BodyUpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.BodyUpdatedAt
}

// GetBodyUpdatedAtOk returns a tuple with the BodyUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Postmortem) GetBodyUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.BodyUpdatedAt == nil {
		return nil, false
	}
	return o.BodyUpdatedAt, true
}

// HasBodyUpdatedAt returns a boolean if a field has been set.
func (o *Postmortem) HasBodyUpdatedAt() bool {
	if o != nil && o.BodyUpdatedAt != nil {
		return true
	}

	return false
}

// SetBodyUpdatedAt gets a reference to the given time.Time and assigns it to the BodyUpdatedAt field.
func (o *Postmortem) SetBodyUpdatedAt(v time.Time) {
	o.BodyUpdatedAt = &v
}

// GetBodyDraft returns the BodyDraft field value if set, zero value otherwise.
func (o *Postmortem) GetBodyDraft() string {
	if o == nil || o.BodyDraft == nil {
		var ret string
		return ret
	}
	return *o.BodyDraft
}

// GetBodyDraftOk returns a tuple with the BodyDraft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Postmortem) GetBodyDraftOk() (*string, bool) {
	if o == nil || o.BodyDraft == nil {
		return nil, false
	}
	return o.BodyDraft, true
}

// HasBodyDraft returns a boolean if a field has been set.
func (o *Postmortem) HasBodyDraft() bool {
	if o != nil && o.BodyDraft != nil {
		return true
	}

	return false
}

// SetBodyDraft gets a reference to the given string and assigns it to the BodyDraft field.
func (o *Postmortem) SetBodyDraft(v string) {
	o.BodyDraft = &v
}

// GetBodyDraftUpdatedAt returns the BodyDraftUpdatedAt field value if set, zero value otherwise.
func (o *Postmortem) GetBodyDraftUpdatedAt() time.Time {
	if o == nil || o.BodyDraftUpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.BodyDraftUpdatedAt
}

// GetBodyDraftUpdatedAtOk returns a tuple with the BodyDraftUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Postmortem) GetBodyDraftUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.BodyDraftUpdatedAt == nil {
		return nil, false
	}
	return o.BodyDraftUpdatedAt, true
}

// HasBodyDraftUpdatedAt returns a boolean if a field has been set.
func (o *Postmortem) HasBodyDraftUpdatedAt() bool {
	if o != nil && o.BodyDraftUpdatedAt != nil {
		return true
	}

	return false
}

// SetBodyDraftUpdatedAt gets a reference to the given time.Time and assigns it to the BodyDraftUpdatedAt field.
func (o *Postmortem) SetBodyDraftUpdatedAt(v time.Time) {
	o.BodyDraftUpdatedAt = &v
}

// GetPublishedAt returns the PublishedAt field value if set, zero value otherwise.
func (o *Postmortem) GetPublishedAt() time.Time {
	if o == nil || o.PublishedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.PublishedAt
}

// GetPublishedAtOk returns a tuple with the PublishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Postmortem) GetPublishedAtOk() (*time.Time, bool) {
	if o == nil || o.PublishedAt == nil {
		return nil, false
	}
	return o.PublishedAt, true
}

// HasPublishedAt returns a boolean if a field has been set.
func (o *Postmortem) HasPublishedAt() bool {
	if o != nil && o.PublishedAt != nil {
		return true
	}

	return false
}

// SetPublishedAt gets a reference to the given time.Time and assigns it to the PublishedAt field.
func (o *Postmortem) SetPublishedAt(v time.Time) {
	o.PublishedAt = &v
}

// GetNotifySubscribers returns the NotifySubscribers field value if set, zero value otherwise.
func (o *Postmortem) GetNotifySubscribers() bool {
	if o == nil || o.NotifySubscribers == nil {
		var ret bool
		return ret
	}
	return *o.NotifySubscribers
}

// GetNotifySubscribersOk returns a tuple with the NotifySubscribers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Postmortem) GetNotifySubscribersOk() (*bool, bool) {
	if o == nil || o.NotifySubscribers == nil {
		return nil, false
	}
	return o.NotifySubscribers, true
}

// HasNotifySubscribers returns a boolean if a field has been set.
func (o *Postmortem) HasNotifySubscribers() bool {
	if o != nil && o.NotifySubscribers != nil {
		return true
	}

	return false
}

// SetNotifySubscribers gets a reference to the given bool and assigns it to the NotifySubscribers field.
func (o *Postmortem) SetNotifySubscribers(v bool) {
	o.NotifySubscribers = &v
}

// GetNotifyTwitter returns the NotifyTwitter field value if set, zero value otherwise.
func (o *Postmortem) GetNotifyTwitter() bool {
	if o == nil || o.NotifyTwitter == nil {
		var ret bool
		return ret
	}
	return *o.NotifyTwitter
}

// GetNotifyTwitterOk returns a tuple with the NotifyTwitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Postmortem) GetNotifyTwitterOk() (*bool, bool) {
	if o == nil || o.NotifyTwitter == nil {
		return nil, false
	}
	return o.NotifyTwitter, true
}

// HasNotifyTwitter returns a boolean if a field has been set.
func (o *Postmortem) HasNotifyTwitter() bool {
	if o != nil && o.NotifyTwitter != nil {
		return true
	}

	return false
}

// SetNotifyTwitter gets a reference to the given bool and assigns it to the NotifyTwitter field.
func (o *Postmortem) SetNotifyTwitter(v bool) {
	o.NotifyTwitter = &v
}

// GetCustomTweet returns the CustomTweet field value if set, zero value otherwise.
func (o *Postmortem) GetCustomTweet() string {
	if o == nil || o.CustomTweet == nil {
		var ret string
		return ret
	}
	return *o.CustomTweet
}

// GetCustomTweetOk returns a tuple with the CustomTweet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Postmortem) GetCustomTweetOk() (*string, bool) {
	if o == nil || o.CustomTweet == nil {
		return nil, false
	}
	return o.CustomTweet, true
}

// HasCustomTweet returns a boolean if a field has been set.
func (o *Postmortem) HasCustomTweet() bool {
	if o != nil && o.CustomTweet != nil {
		return true
	}

	return false
}

// SetCustomTweet gets a reference to the given string and assigns it to the CustomTweet field.
func (o *Postmortem) SetCustomTweet(v string) {
	o.CustomTweet = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Postmortem) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Postmortem) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Postmortem) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Postmortem) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Postmortem) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Postmortem) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Postmortem) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Postmortem) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o Postmortem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PreviewKey != nil {
		toSerialize["preview_key"] = o.PreviewKey
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.BodyUpdatedAt != nil {
		toSerialize["body_updated_at"] = o.BodyUpdatedAt
	}
	if o.BodyDraft != nil {
		toSerialize["body_draft"] = o.BodyDraft
	}
	if o.BodyDraftUpdatedAt != nil {
		toSerialize["body_draft_updated_at"] = o.BodyDraftUpdatedAt
	}
	if o.PublishedAt != nil {
		toSerialize["published_at"] = o.PublishedAt
	}
	if o.NotifySubscribers != nil {
		toSerialize["notify_subscribers"] = o.NotifySubscribers
	}
	if o.NotifyTwitter != nil {
		toSerialize["notify_twitter"] = o.NotifyTwitter
	}
	if o.CustomTweet != nil {
		toSerialize["custom_tweet"] = o.CustomTweet
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullablePostmortem struct {
	value *Postmortem
	isSet bool
}

func (v NullablePostmortem) Get() *Postmortem {
	return v.value
}

func (v *NullablePostmortem) Set(val *Postmortem) {
	v.value = val
	v.isSet = true
}

func (v NullablePostmortem) IsSet() bool {
	return v.isSet
}

func (v *NullablePostmortem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostmortem(val *Postmortem) *NullablePostmortem {
	return &NullablePostmortem{value: val, isSet: true}
}

func (v NullablePostmortem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostmortem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


